<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Log Table Demo | React</title>
        <link rel="stylesheet" href="css/log-table.css" data-css-vars-ponyfill>
        <link rel="canonical" href="https://www.dataformsjs.com/examples/log-table-hbs.htm">
    </head>
    <body>
        <div id="root" class="pt10"></div>

        <!-- React -->
        <!--
        <script src="https://cdn.jsdelivr.net/npm/react@17/umd/react.development.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/react-dom@17/umd/react-dom.development.js" crossorigin="anonymous"></script>
        -->
        <script src="https://cdn.jsdelivr.net/npm/react@17.0.2/umd/react.production.min.js" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/react-dom@17.0.2/umd/react-dom.production.min.js" crossorigin="anonymous"></script>

        <!--
            React Router
            https://reacttraining.com/react-router/
            https://github.com/ReactTraining/react-router
        -->
        <script src="https://cdn.jsdelivr.net/npm/react-router@5.2.0/umd/react-router.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/react-router-dom@5.2.0/umd/react-router-dom.min.js"></script>

        <!-- DataFormsJS React Components -->
        <!--
        <script type="text/babel" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/ErrorBoundary.js"></script>
        <script type="text/babel" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/LazyLoad.js"></script>
        <script type="text/babel" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/JsonData.js"></script>
        -->
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es6/DataFormsJS.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/es5/DataFormsJS.min.js"></script>

        <!-- DataFormsJS JSX Loader -->
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/jsxLoader.min.js"></script>
        <script>
            // Set to `true` to see compiler details
            jsxLoader.logCompileTime = false;
            jsxLoader.logCompileDetails = false;
        </script>

        <!--
            DataFormsJS Framework Plugins

            Standard Frameworks Plugins can be used as long as [React/jsPlugins.js]
            is defined before other Plugins files.

            Then to call use:
                <JsonData onViewUpdated={window.app.refreshPlugins}>
        -->
        <!-- <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/jsPlugins.min.js"></script> -->
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/react/jsPlugins.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/filter.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/sort.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/highlighter.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/clickToHighlight.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/exportToCsv.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/exportToExcel.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/plugins/navLinks.min.js"></script>

        <script type="text/babel">
            const Router = window.ReactRouterDOM.HashRouter;
            const Route = window.ReactRouterDOM.Route;
            const Redirect = window.ReactRouterDOM.Redirect;
            const Link = window.ReactRouterDOM.Link;

			function ShowLoading() {
                return <h3 className="loading">Loading...</h3>;
            }

            function ShowError(props) {
                return <h3 className="error">{props.error}</h3>;
            }

			function ShowLog(props) {
                return (
                    <React.Fragment>
                        {props.data && props.data.errorMessage &&
                            <ShowError error={props.data.errorMessage} />
                        }

                        <div className="flex pt10">
                            <h2></h2>
                            <button data-filter-clear-all>Clear Filter</button>
                        </div>

                        <nav>
                            <Link to={'/10'}>10 Records</Link>
                            <Link to={'/100'}>100 Records</Link>
                            <Link to={'/200'}>200 Records</Link>
                            <Link to={'/error'}>Error Example</Link>
                        </nav>

                        <FilterHtml />

                        <table data-sort data-sort-class-odd="row-odd" data-sort-class-even="row-even">
                            <thead>
                                <tr>
                                    {props.data && props.data.columns && props.data.columns.map(column => {
                                        return <th key={column}>{column}</th>
                                    })}
                                </tr>
                            </thead>
                            <tbody className="click-to-highlight">
                                {props.data && props.data.records && props.data.records.map((record, index) => {
                                    return (<tr key={index}>
                                        {record.values.map((value, valueIndex) => {
                                            return (<td key={valueIndex}>{value}</td>)
                                        })}
                                    </tr>)
                                })}
                            </tbody>
                        </table>
                    </React.Fragment>
                )
            }

            function FilterHtml() {
                return (
                    <React.Fragment>
                        <div>
                            <input type="text" className="large form-control medium-margin-right"
                                    data-filter-selector="table"
                                    data-filter-results-text-selector="h2"
                                    data-filter-results-text-all="{totalCount} Log Example Records"
                                    data-filter-results-text-filtered="Showing {displayCount} of {totalCount} Log Example Records"
                                    data-filter-class-odd="row-odd"
                                    data-filter-class-even="row-even"
                                    placeholder="Enter Filter" />

                            <button type="button"
                                data-export-csv-selector="table"
                                data-export-file-name="Log-Report.csv">Export to CSV</button>

                            <button type="button"
                                data-export-excel-selector="table"
                                data-export-file-name="Log-Report.xlsx"
                                data-worksheet-name="Log Report">Export to Excel</button>
                        </div>

                        <div className="highlighter" style={{display:'none'}}>
                            <ul>
                                <li className="info">Click or Tap to Filter</li>
                                <li className="log-error"
                                    data-highlight-selector="table tbody tr td:nth-child(1)"
                                    data-highlight-value="ERROR"
                                    data-highlight-operator="==="
                                    data-highlight-class="log-error"
                                    data-filter-selector="table"
                                    data-filter-column="Log Level"
                                    data-filter-operator="==="
                                    data-filter-value="ERROR"></li>
                                <li className="log-warning"
                                    data-highlight-selector="table tbody tr td:nth-child(1)"
                                    data-highlight-value="WARNING"
                                    data-highlight-operator="==="
                                    data-highlight-class="log-warning"
                                    data-filter-selector="table"
                                    data-filter-column="Log Level"
                                    data-filter-operator="==="
                                    data-filter-value="WARNING"></li>
                            </ul>
                        </div>
                    </React.Fragment>
                )
            }

            function LogPage({match}) {
                return (
                    <JsonData
                        url="https://www.dataformsjs.com/data/example/log-table/:count"
                        count={match.params.count}
                        isLoading={<ShowLoading />}
                        hasError={<ShowError />}
                        isLoaded={<ShowLog />}
                        onViewUpdated={window.app.refreshPlugins}>
                    </JsonData>
                );
            }

            class App extends React.Component {
                render() {
                    return (
                        <ErrorBoundary>
                            <Router>
                                <React.Fragment>
                                    <Route exact path="/" render={() => (
                                        <Redirect to="/10" />
                                    )}/>
                                    <Route path="/:count" component={LogPage} />
                                </React.Fragment>
                            </Router>
                        </ErrorBoundary>
                    )
                }
            }

            ReactDOM.render(
                <App />,
                document.getElementById('root')
            );

            // Add CSS Variable Support to IE and older Browsers
            CssVars.ponyfill();
        </script>
    </body>
</html>
