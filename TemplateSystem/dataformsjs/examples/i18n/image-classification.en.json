{
    "AI/ML Image Classification | Handlebars": "AI/ML Image Classification | Handlebars",
    "AI/ML Image Classification | Vue": "AI/ML Image Classification | Vue",
    "AI/ML Image Classification | React": "AI/ML Image Classification | React",
    "Images": "Images",
    "Categories": "Categories",
    "Image Prediction Demo": "Image Prediction Demo",
    "Info": "Info",
    "Uploading...": "Uploading...",
    "Loading...": "Loading...",
    "Error": "Error",
    "{totalCount} Image Categories": "{totalCount} Image Categories",
    "Showing {displayCount} of {totalCount} Image Categories": "Showing {displayCount} of {totalCount} Image Categories",
    "Enter filter, example [dog] or [cat]": "Enter filter, example [dog] or [cat]",
    "Image Classification Info": "Image Classification Info",
    "Overview": "Overview",
    "Links": "Links",
    "info_1": "AI = Artificial Intelligence / ML = Machine Learning",
    "info_2": "This page demonstrates extending a JSON Web Service page with DataFormsJS to include custom JavaScript code.",
    "info_3": "This page downloads sample images and results from a JSON Service and allows for predictions from upload images to AI/ML Image Classification Web service built with Python using PyTorch.",
    "info_4": "When you upload an image it will be matched against 1,000 different categories; if an image is uploaded that does not match one of the categories the results may be inaccurate because the model can only match against the known categories. For example a photo of a dolphin may be categorized with medium probability as a great white shark.",
    "info_5": "Ideally the main item in the image will be in the center and the focus of the photo otherwise the results will be less accurate.",
    "info_6": "Any images that you upload are private only to you and are deleted from the server as soon as they are processed.",
    "info_7": "Predictions take some time so expect 1 second or more per image that you upload.",
    "info_8": "The model used for image classification is ResNet50 using pre-trained ImageNet weights. ResNet50 is a well-known and widely used convolutional neural network for image classification.",
    "info_9": "Demo pages built using HandlebarsJS and Vue define a custom page [imagePredictionPage] in [image-classification.js] which extends the core [jsonData.js] page object. When using the DataFormsJS Framework this is a common and recommended method for adding custom JavaScript to existing web services.",
    "info_10": "The React demo defines custom page components in [image-home-react.jsx]. The custom page component <ShowImages> is used for <JsonData>.[isLoaded] and updates data after it is downloaded by setting the state of the <JsonData> component when calling [props.handleChange()]. Additionally because [loadOnlyOnce={true}] is used for the web service the state is linked to the URL and data is downloaded only once. The state for the main page will be kept in memory if navigating to another page and then displayed again when clicking back.",
    "info_11": "The Web Components demo shows how basic functions can be used with the <json-data> [onready] attribute and additional minimal DataFormsJS API to create the same app as using the standard DataFormsJS Framework and React Components.",
    "info_12": "Panda Photo by Jay Wennington on Unsplash",
    "info_13": "Skiing and Mountain Photo by Samuel Ferrara on Unsplash",
    "prob_high": ">= 67% Probability",
    "prob_med": ">= 33% and < 67%",
    "prob_low": "< 33% Probability",
    "source_code": "Source Code",
    "src_js_vue_hbs": "JavaScript (Vue and HandlebarsJS)"
}