{
    "AI/ML Image Classification | Handlebars": "AI/ML Classificação de Imagem | HandlebarsJS",
    "AI/ML Image Classification | Vue": "AI/ML Classificação de Imagem | Vue",
    "AI/ML Image Classification | React": "AI/ML Classificação de Imagem | React",
    "Images": "Imagens",
    "Categories": "Categorias",
    "Image Prediction Demo": "Demonstração de Predição de Imagens",
    "Info": "Info",
    "Uploading...": "Enviando...",
    "Loading...": "Carregando...",
    "Error": "Erro",
    "{totalCount} Image Categories": "{totalCount} Categorias de Imagem",
    "Showing {displayCount} of {totalCount} Image Categories": "Mostrando {displayCount} de {totalCount} Categorias de Imagem",
    "Enter filter, example [dog] or [cat]": "Entre com o filtro, exemplo [cachorro] ou [gato]",
    "Image Classification Info": "Informação de Classificação de Imagem",
    "Overview": "Visão Geral",
    "Links": "Links",
    "info_1": "AI = Artificial Intelligence / ML = Machine Learning",
    "info_2": "Esta página demonstra como extender uma página Web Service JSON com DataFormsJS para incluir código personalizado JavaScript.",
    "info_3": "Esta página baixa imagens de exemplo e resultados de um serviço JSON e permite predições à partir de imagens enviadas para o serviço web AI/ML Classificação de Imagem desenvolvido em Python usando PyTorch.",
    "info_4": "Quando você envia uma imagem essa será comparada com categorias 1.000 diferentes; se uma imagem é enviada que não corresponde a uma das categorias os resultados talvez sejam imprecisos porque o modelo pode somente comparar com categorias conhecidas. Por exemplo uma foto de um golfinho pode ser categorizada com média probabilidade como um grande tubarão branco.",
    "info_5": "O ideal é o item principal em uma imagem estar no centro e no foco da foto the main item in the image will be in the center and the focus of the photo caso contrário os resultados serão menos precisos.",
    "info_6": "Quaisquer imagens que você envia são privadas e são apagadas do servidor assim que seu processamento é finalizado.",
    "info_7": "Predições tomam algum tempo então espere que haja 1 segundo ou mais por imagem que você enviar.",
    "info_8": "O modelo usado para classificação de imagem é o ResNet50 usando pesos pré-treinados do ImageNet. ResNet50 é uma bem conhecida e amplamente utilizada Rede Neural Convolucional para classificação de imagem.",
    "info_9": "Páginas de demonstração desenvolvidas utilizando HandlebarsJS e Vue definem uma página personalizada [imagePredictionPage] em [image-classification.js] o qual estende o objeto de página principal [jsonData.js]. Quando utilizando o framework DataFormsJS isso é um método comum e recomendado para adicionar JavaScript personalizado para os serviços web existentes.",
    "info_10": "A demonstração de React define componentes personalizados de página em [image-home-react.jsx]. O componente de página personalizado <ShowImages> é usado por <JsonData>.[isLoaded] e atualiza dados depois de baixado definindo o estado do componente <JsonData> ao chamar [props.handleChange()]. Além disso por [loadOnlyOnce={true}] ser usado para o serviço web o estado está ligado à URL e os dados são baixados somente uma vez. O estado da página principal será mantido em memória quando se navega para outra página e então é mostrada novamente quando ao clicar para voltar.",
    "info_11": "The Web Components demo shows how basic functions can be used with the <json-data> [onready] attribute and additional minimal DataFormsJS API to create the same app as using the standard DataFormsJS Framework and React Components.",
    "info_12": "Foto de Panda por Jay Wennington no Unsplash",
    "info_13": "Foto Esquiando e Montanha por Samuel Ferrara no Unsplash",
    "prob_high": ">= 67% de Probabilidade",
    "prob_med": ">= 33% e < 67%",
    "prob_low": "< 33% de Probabilidade",
    "source_code": "Código Fonte",
    "src_js_vue_hbs": "JavaScript (Vue e HandleBarsJS)"
}
