{
    "AI/ML Image Classification | Handlebars": "AI/ML Classification d'image | Handlebars",
    "AI/ML Image Classification | Vue": "AI/ML Classification d'image | Vue",
    "AI/ML Image Classification | React": "AI/ML Classification d'image | React",
    "Images": "Images",
    "Categories": "Les catégories",
    "Image Prediction Demo": "Démo de prédiction d'image",
    "Info": "Info",
    "Uploading...": "Téléchargement...",
    "Loading...": "Chargement...",
    "Error": "Erreur",
    "{totalCount} Image Categories": "{totalCount} Catégories d'images",
    "Showing {displayCount} of {totalCount} Image Categories": "Affichage de {displayCount} sur {totalCount} catégories d'images",
    "Enter filter, example [dog] or [cat]": "Entrez le filtre, par exemple «dog» ou «cat»",
    "Image Classification Info": "Informations sur la classification des images",
    "Overview": "Aperçu",
    "Links": "Liens",
    "info_1": "AI = Intelligence Artificielle / ML = Apprentissage Automatique",
    "info_2": "Cette page montre comment étendre une page de service Web JSON avec DataFormsJS pour inclure du code JavaScript personnalisé.",
    "info_3": "Cette page télécharge des exemples d'images et de résultats à partir d'un service JSON et permet des prédictions de téléchargement d'images vers le service Web de classification d'images AI/ML construit avec Python en utilisant PyTorch.",
    "info_4": "Lorsque vous téléchargez une image, elle sera comparée à 1 000 catégories différentes; si une image est téléchargée qui ne correspond pas à l'une des catégories, les résultats peuvent être inexacts car le modèle ne peut correspondre qu'aux catégories connues. Par exemple, une photo d'un dauphin peut être classée avec une probabilité moyenne comme un grand requin blanc.",
    "info_5": "Idéalement, l'élément principal de l'image sera au centre et la mise au point de la photo, sinon les résultats seront moins précis.",
    "info_6": "Toutes les images que vous téléchargez sont privées uniquement pour vous et sont supprimées du serveur dès qu'elles sont traitées.",
    "info_7": "Les prévisions prennent un certain temps, alors attendez-vous à 1 seconde ou plus par image que vous téléchargez.",
    "info_8": "Le modèle utilisé pour la classification des images est ResNet50 utilisant des poids ImageNet pré-formés. ResNet50 est un réseau de neurones à convolution bien connu et largement utilisé pour la classification d'images.",
    "info_9": "Les pages de démonstration créées à l'aide des guidons et de la vue définissent une page personnalisée [imagePredictionPage] dans [image-classification.js] qui étend l'objet de page principal [jsonData.js]. Lorsque vous utilisez DataFormsJS Framework, il s'agit d'une méthode courante et recommandée pour ajouter du JavaScript personnalisé aux services Web existants.",
    "info_10": "La démo React définit les composants de page personnalisés dans [image-home-react.jsx]. Le composant de page personnalisé <ShowImages> est utilisé pour <JsonData>. [IsLoaded] et met à jour les données après leur téléchargement en définissant l'état du composant <JsonData> lors de l'appel de [props.handleChange()]. De plus, parce que [loadOnlyOnce={true}] est utilisé pour le service Web, l'état est lié à l'URL et les données ne sont téléchargées qu'une seule fois. L'état de la page principale sera conservé en mémoire si vous accédez à une autre page, puis affiché à nouveau lorsque vous cliquez en arrière.",
    "info_11": "The Web Components demo shows how basic functions can be used with the <json-data> [onready] attribute and additional minimal DataFormsJS API to create the same app as using the standard DataFormsJS Framework and React Components.",
    "info_12": "Panda Photo de Jay Wennington sur Unsplash",
    "info_13": "Ski et montagne Photo de Samuel Ferrara sur Unsplash",
    "prob_high": ">= 67% de probabilité",
    "prob_med": ">= 33% et <67%",
    "prob_low": "<33% de probabilité",
    "source_code": "Code Source",
    "src_js_vue_hbs": "JavaScript (Vue et HandlebarsJS)"
}