{
    "AI/ML Image Classification | Handlebars": "AI/ML تصنيف الصور | Handlebars",
    "AI/ML Image Classification | Vue": "AI/ML تصنيف الصور | Vue",
    "AI/ML Image Classification | React": "AI/ML تصنيف الصور | React",
    "Images": "صور",
    "Categories": "التصنيفات",
    "Image Prediction Demo": "صورة التنبؤ التجريبي",
    "Info": "معلومات",
    "Uploading...": "تحميل...",
    "Loading...": "جار التحميل...",
    "Error": "خطأ",
    "{totalCount} Image Categories": "{totalCount} فئات الصور",
    "Showing {displayCount} of {totalCount} Image Categories": "عرض {displayCount} من {totalCount} فئات الصور",
    "Enter filter, example [dog] or [cat]": "أدخل الفلتر ، مثال [dog] أو [cat]",
    "Image Classification Info": "صورة تصنيف المعلومات",
    "Overview": "نظرة عامة",
    "Links": "الروابط",
    "info_1": "AI = الذكاء الاصطناعي / ML = التعلم الالي",
    "info_2": "توضح هذه الصفحة توسيع صفحة JSON Web Service مع DataFormsJS لتضمين شفرة JavaScript مخصصة.",
    "info_3": "تقوم هذه الصفحة بتنزيل نماذج من الصور والنتائج من خدمة JSON وتسمح بالتنبؤات من تحميل الصور إلى خدمة ويب تصنيف الصور AI / ML المبنية مع Python باستخدام PyTorch.",
    "info_4": "عند تحميل صورة ، ستتم مطابقتها مع 1000 فئة مختلفة ؛إذا تم تحميل صورة لا تتطابق مع إحدى الفئات ، فقد تكون النتائج غير دقيقة لأن النموذج يمكن أن يتطابق مع الفئات المعروفة فقط.على سبيل المثال ، يمكن تصنيف صورة الدلفين باحتمالية متوسطة كسمك قرش أبيض كبير.",
    "info_5": "من الناحية المثالية ، سيكون العنصر الرئيسي في الصورة في الوسط وتركيز الصورة وإلا ستكون النتائج أقل دقة.",
    "info_6": "تعتبر أي صور تقوم بتحميلها خاصة لك فقط ويتم حذفها من الخادم بمجرد معالجتها.",
    "info_7": "تستغرق التنبؤات بعض الوقت ، لذلك توقع ثانية واحدة أو أكثر لكل صورة تقوم بتحميلها.",
    "info_8": "النموذج المستخدم لتصنيف الصور هو ResNet50 باستخدام أوزان ImageNet المدربة مسبقًا.ResNet50 هي شبكة عصبية تلافيفية معروفة وتستخدم على نطاق واسع لتصنيف الصور.",
    "info_9": "تحدد الصفحات التجريبية التي تم إنشاؤها باستخدام HandlebarsJS و Vue صفحة مخصصة [imagePredictionPage] في [image-rating.js] والتي تمدد كائن الصفحة الأساسي [jsonData.js].عند استخدام DataFormsJS Framework ، فهذه طريقة شائعة وموصى بها لإضافة JavaScript مخصص إلى خدمات الويب الحالية.",
    "info_10": "يحدد العرض التفاعلي React مكونات الصفحة المخصصة في [image-home-react.jsx].يتم استخدام مكون الصفحة المخصص <ShowImages> من أجل <JsonData>. [isLoaded] ويقوم بتحديث البيانات بعد تنزيلها عن طريق تعيين حالة المكون <JsonData> عند استدعاء [props.handleChange ()].بالإضافة إلى ذلك ، لأن [loadOnlyOnce = {true}] يُستخدم لخدمة الويب ، ترتبط الحالة بعنوان URL ويتم تنزيل البيانات مرة واحدة فقط.سيتم الاحتفاظ بحالة الصفحة الرئيسية في الذاكرة في حالة الانتقال إلى صفحة أخرى ثم عرضها مرة أخرى عند النقر فوق \"السابق\".",
    "info_11": "The Web Components demo shows how basic functions can be used with the <json-data> [onready] attribute and additional minimal DataFormsJS API to create the same app as using the standard DataFormsJS Framework and React Components.",
    "info_12": "صورة Panda بواسطة Jay Wennington on Unsplash",
    "info_13": "التزلج والجبال صور بواسطة Samuel Ferrara on Unsplash",
    "prob_high": ">= 67 ٪ الاحتمال",
    "prob_med": ">= 33 ٪ و <67 ٪",
    "prob_low": "<33 ٪ الاحتمال",
    "source_code": "مصدر الرمز",
    "src_js_vue_hbs": "جافا سكريبت (Vue and HandlebarsJS)"
}