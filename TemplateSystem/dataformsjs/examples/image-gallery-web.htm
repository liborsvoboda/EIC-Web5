<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Image Gallery Demo | Web Components</title>
        <link href="https://www.dataformsjs.com/js/prism-1.22.0/prism.css" rel="stylesheet">
        <link rel="stylesheet" href="css/image-gallery.css" data-css-vars-ponyfill>
    </head>
    <body>
        <section class="page-title">
            <h1 tabindex="1">DataFormsJS <span>&#x3C;image-gallery&#x3E;</span> <span>Web Component</span></h1>
            <img src="https://www.dataformsjs.com/img/examples/image-gallery.svg" alt="Image Gallery" />
        </section>

        <div class="about">
            <section>
                <h2 tabindex="2">Features</h2>
                <ul class="emoji-list">
                    <li data-emoji="🖼️">Shows Overlay with large Image for Thumbnails.</li>
                    <li data-emoji="🎨">Minimal UI so the focus is on the Content.</li>
                    <li data-emoji="💡">Easy to use from any device and fully accessible.</li>
                    <li data-emoji="📱">Handles Swipe left/right and Tap to close on Mobile Devices.</li>
                    <li data-emoji="💻">Fully works on Desktop or Laptop Computer from Mouse. Click to open gallery and Back and Forward buttons are displayed when using a Mouse.</li>
                    <li data-emoji="⌨️">Fully works from a Keyboard. If using [tabindex] so thumbnails can be selected a spacebar can be used to open the gallery and Left/Right/Escape Keys can be used for navigation.</li>
                    <li data-emoji="🏷️">Displays [title] of the image with Index by default. If [title] is not included and a child &#x3C;img&#x3E; element with an [alt] attribute is used then the [alt] text will be used as the overlay title.</li>
                    <li data-emoji="🕒">Displays a loading indicator if an image takes longer than 2 seconds to load. The text and timeout can be changed by setting attributes [loading-text] and [loading-timeout].</li>
                    <li data-emoji="🚀">Supports next-gen image formats AVIF and WebP by using optional attributes [image-avif] and [image-webp]. When using next-gen image formats a default/fallback [image] must be included similar to how the HTML &lt;picture&gt; element works.</li>
                    <li data-emoji="✨">Image loading is optimized so that large images are loaded only when viewed and the previous and next images preloaded while the user is viewing the focused image.</li>
                    <li data-emoji="🎨">Overlay style and layout can easily changed with CSS.</li>
                    <li data-emoji="😊">Small Download - 3.0 kB when gzipped and minified.</li>
                    <li data-emoji="⚙️">The code exists in a single file so it's easy to copy and modify if changes or portions of it are needed as part of a custom app.</li>
                    <li data-emoji="🌐">Works with all Browsers. Web Components only work with modern Browsers, however a polyfill is available for IE and older mobile devices. The polyfill uses the DataFormsJS Framework to handle custom elements.</li>
                </ul>
            </section>

            <section>
                <h2 tabindex="3" class="github">
                    <img src="./img/GitHub-Mark-32px.png" alt="GitHub">
                    <span>Full Source Code</span>
                </h2>
                <ul class="source-code">
                    <li>
                        <a href="https://github.com/dataformsjs/dataformsjs/blob/master/js/web-components/image-gallery.js" target="_blank" ref="noopener">
                            <img src="./img/Unofficial_JavaScript_logo_2.svg" width="64" alt="JavaScript">
                            <strong>Web Component</strong>
                        </a>
                    </li>
                    <li>
                        <a href="https://github.com/dataformsjs/dataformsjs/blob/master/examples/image-gallery-web.htm" target="_blank" ref="noopener">
                            <img src="./img/HTML5_Logo.svg" width="64" alt="HTML">
                            <strong>HTML for this Page</strong>
                        </a>
                    </li>
                </ul>
            </section>

            <section>
                <h2 tabindex="4">Example Usage and Code</h2>
                <pre class="language-html">
                    <code>&#x3C;!--
Include component on page
--&#x3E;
&#x3C;script type=&#x22;module&#x22; src=&#x22;dataformsjs/js/web-components/image-gallery.min.js&#x22;&#x3E;
&#x3C;/script&#x3E;

&#x3C;!--
    Include an &#x3C;img&#x3E; within the &#x3C;image-gallery&#x3E; and
    specify [image] and optional [title] attribute on the &#x3C;image-gallery&#x3E;
    If [title] is not included [alt] from the &#x3C;img&#x3E; can be used.
--&#x3E;
&#x3C;image-gallery image=&#x22;${image}&#x22;&#x3E;
    &#x3C;img src=&#x22;${thumbnail}&#x22; alt=&#x22;${title}&#x22; /&#x3E;
&#x3C;/image-gallery&#x3E;

&#x3C;!--
    Or simply include a background image on the &#x3C;image-gallery&#x3E; element.
    This example uses a custom loading message and timeout.
--&#x3E;
&#x3C;image-gallery
    image=&#x22;${image}&#x22;
    style=&#x22;background-image: url(&#x27;${thumbnail}&#x27;);&#x22;
    title=&#x22;${title}&#x22;
    loading-text=&#x22;Carregando...&#x22;
    loading-timeout=&#x22;1000&#x22;&#x3E;
&#x3C;/image-gallery&#x3E;

&#x3C;!--
    Supports next-gen image formats AVIF and WebP by using
    optional attributes [image-avif] and [image-webp].
    When using next-gen image formats a default/fallback [image]
    must be included similar to how the HTML &lt;picture&gt; element works.
--&#x3E;
&#x3C;image-gallery
    image=&#x22;${image}&#x22;
    image-avif=&#x22;${image_avif}&#x22;
    image-webp=&#x22;${image_webp}&#x22;&#x3E;
        &#x3C;img src=&#x22;${thumbnail}&#x22; alt=&#x22;${title}&#x22; /&#x3E;
&#x3C;/image-gallery&#x3E;

&#x3C;!--
To override default styles use `!important` and specify the style
attributes to override in any style sheet on the page or define your
own style sheet before the component runs using id `image-gallery-css`.
--&#x3E;
&lt;style&gt;
.image-gallery-overlay { background-color: black !important; }
.image-gallery-overlay { background-color: rgba(0,0,0,.7) !important; }

.image-gallery-overlay .btn-previous,
.image-gallery-overlay .btn-next { background-color: blue !important; }
&lt;/style&gt;
&lt;style id=&quot;image-gallery-css&quot;&gt;...&lt;/style&gt;
&lt;link rel=&quot;stylesheet&quot; id=&quot;image-gallery-css&quot; href=&quot;css/image-gallery.css&quot;&gt;</code>
                </pre>
            </section>
        </div>

        <json-data url="https://dataformsjs.s3-us-west-1.amazonaws.com/img/example-images/index.json">
            <is-loading>
                <span class="loading">Loading Photos...</span>
            </is-loading>
            <has-error>
                <h2 class="error">Error loading photos</h2>
                <span class="error" data-bind="errorMessage"></span>
            </has-error>
            <is-loaded>
                <!-- Example (1) -->
                <data-list
                    data-bind="images"
                    template-selector="#image"
                    root-element="div"
                    root-class="image-gallery">
                </data-list>

                <!-- Example (2) -->
                <!--
                <data-list
                    data-bind="images"
                    template-selector="#image-li"
                    root-element="ul"
                    root-attr="class=images">
                </data-list>
                -->
            </is-loaded>
        </json-data>

        <!--
            Using [tabindex] staring at "5" based on main HTML content

            [image-avif] and [image-webp] are optional and included for
            browsers that support these images formats.
        -->
        <template id="image">
            <image-gallery image="${image}" image-avif="${image_avif}" image-webp="${image_webp}">
                <img src="${thumbnail}" alt="${title}" tabindex="${index+5}" />
            </image-gallery>
        </template>

        <template id="image-li">
            <li>
                <image-gallery
                    image="${image}"
                    style="background-image: url('${thumbnail}');"
                    title="${title}"
                    loading-text="Carregando..."
                    loading-timeout="1000"
                    tabindex="${index+5}">
                </image-gallery>
            </li>
        </template>

        <show-errors-service></show-errors-service>

        <!--
            DataFormsJS Web Components
            https://www.dataformsjs.com/
        -->
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/web-components/json-data.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/web-components/data-list.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/web-components/image-gallery.min.js"></script>
        <script type="module" src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/web-components/show-errors-service.min.js"></script>
        <script nomodule src="https://cdn.jsdelivr.net/npm/dataformsjs@5/js/web-components/polyfill.min.js"></script>

        <!--
            https://prismjs.com/
        -->
        <script src="https://www.dataformsjs.com/js/prism-1.22.0/prism.modified.min.js"></script>
    </body>
</html>