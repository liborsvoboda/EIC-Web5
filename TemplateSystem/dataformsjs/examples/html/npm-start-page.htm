<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>DataFormsJS Examples</title>
        <style>
            :root {
                --border-color: #dfe2e5;
                --light-bg-color: #f6f8fa;
            }

            json-data:not(:defined),
            is-loading:not(:defined),
            has-error:not(:defined),
            is-loaded:not(:defined) { display:none; }

            html, body { padding:0; margin:0; }
            html {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
                min-height:100vh;
            }
            body {
                display: flex;
                flex-direction: column;
                align-items: center;
                background-image: linear-gradient(180deg, hsla(0, 0%, 100%, .6) 1%, hsla(0, 0%, 100%, .5) 30%,#f5f4f4), linear-gradient(25deg, #ffdbe7, #a9d9ff 32%,#f3eba6);
                padding: 40px;
            }
            #view,
            is-loaded,
            .is-loaded {
                display: flex;
                flex-direction: column;
                align-items: center;
            }
            h1 { text-align:center; }
            input {
                padding: 1em 1.5em;
                width: 100%;
                max-width: 400px;
                margin: 4em;
                box-shadow: 0 1px 2px rgba(0,0,0,.5);
                border-radius: 2em;
                border: none;
                -webkit-appearance: none;
                outline: none;
            }
            nav {
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                justify-content: center;
                margin-bottom: 2em;
            }
            nav a.active {
                font-weight: bold;
            }
            ul.links {
                list-style-type: none;
                display: flex;
                flex-wrap: wrap;
                max-width: 100%;
                justify-content: center;
                margin: 0;
                padding: 0;
            }
            nav a,
            ul.links li {
                padding:.5em 1em;
                margin:.5em;
                box-shadow:0 1px 2px 1px rgba(0,0,0,.3);
                background-color:white;
                border-radius: 1em;
            }
            nav a,
            ul.links a { text-decoration: none; }
            nav a:hover,
            ul.links a:hover,
            ul.links.docs li:hover { text-decoration: underline; }

            ul.links.docs li { cursor: pointer; }

            .loading { padding:1em; background-color:lightskyblue; color:white; border:1px solid blue; }
            .error { padding:1em; background-color:red; color:white; border:1px solid darkred; font-weight: bold; }

            markdown-content {
                background-color: white;
                margin: 2em;
                padding: 2em;
                width: calc(100vw - 140px);
                max-width: 1000px;
                border: 1px solid var(--border-color);
                line-height: 1.4em;
                overflow: auto
            }
            markdown-content[data-control] {
                margin: 2em;
                padding: 2em;
            }
            markdown-content img { max-width: 100%; }
            markdown-content h1,
            markdown-content h2 {
                text-align: left;
                padding-bottom: .3em;
                border-bottom: 1px solid var(--border-color);
            }
            markdown-content h1 { font-size:2em; line-height:2em; }
            markdown-content h1[align="center"] { text-align: center; }
            markdown-content h2 { padding-top:1em; font-size:1.5em; line-height:1.5em; }
            markdown-content pre {
                background-color: var(--light-bg-color);
                padding: 1em;
                overflow: auto;
                line-height: 1.4em;
            }
            markdown-content[show-source] pre,
            markdown-content[data-show-source] pre {
                background-color: white;
                padding: 0;
                margin: 0;
                font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
            }
            markdown-content li { line-height: 1.8em; }
            markdown-content code:not([class*="language-"]) {
                background-color: var(--light-bg-color);
                padding: .5em;
                line-height: 1em;
                margin: .2em;
                display: inline-block;
                border-radius: 0.5em;
                font-size: 15px;
            }
            markdown-content table {
                border-collapse: collapse;
                border: 1px solid var(--border-color);
            }
            markdown-content table tbody tr:nth-child(odd) {
                background-color: var(--light-bg-color);
            }
            markdown-content table th,
            markdown-content table td {
                padding: .5em 1em;
                border: 1px solid var(--border-color);
            }
            .hljs { font-size:15px; }

            /* Uncomment for IE Fallback */
            /*
            @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
                [data-control],
                #view,
                is-loaded,
                .is-loaded { width:100%; }
            }
            */
        </style>
    </head>
    <body>
        <header>
            <nav is="spa-links">
                <a href="#/">üñ•Ô∏è &nbsp; Examples</a>
                <a href="#/docs">üìÑ&nbsp; Documentation</a>
                <a href="https://www.dataformsjs.com/" target="_blank" rel="noopener">üåê&nbsp; https://www.dataformsjs.com/</a>
            </nav>
        </header>

        <main id="view" class="container"></main>

        <url-router view-selector="#view">
            <url-route path="/">
                <template>
                    <json-data url="examples">
                        <is-loading>
                            <div class="loading">Loading...</div>
                        </is-loading>
                        <has-error>
                            <div class="error" data-bind="errorMessage"></div>
                        </has-error>
                        <is-loaded>
                            <h1>DataFormsJS Examples</h1>

                            <input
                                is="input-filter"
                                filter-selector="ul li"
                                filter-results-selector="h1"
                                filter-results-text-all="Showing all {totalCount} DataFormsJS Examples"
                                filter-results-text-filtered="Showing {displayCount} of {totalCount} DataFormsJS Examples"
                                placeholder="Enter filter, example 'web', 'react', 'vue', or 'hbs'">

                            <data-list
                                template-selector="#example-item"
                                data-bind="examples"
                                root-element="ul"
                                root-class="links">
                            </data-list>

                            <template id="example-item">
                                <li><a href="${url}">${label}</a></li>
                            </template>
                        </is-loaded>
                    </json-data>
                </template>
            </url-route>

            <!--
                Any one of the 3 widely used Markdown Libraries can be used:
                marked
                markdown_it, markdown_it_emoji
                markdown_it_emoji
            -->
            <url-route path="/docs" lazy-load="markdown, highlightCss, highlightJs, marked">
                <template>
                    <json-data url="docs" onready="setupDocLinks()">
                        <is-loading>
                            <div class="loading">Loading...</div>
                        </is-loading>
                        <has-error>
                            <div class="error" data-bind="errorMessage"></div>
                        </has-error>
                        <is-loaded>
                            <h1>DataFormsJS Documentation</h1>

                            <input
                                is="input-filter"
                                filter-selector="ul.links.docs li"
                                filter-results-selector="h1"
                                filter-results-text-all="Showing all {totalCount} DataFormsJS Docs"
                                filter-results-text-filtered="Showing {displayCount} of {totalCount} DataFormsJS Docs"
                                placeholder="Enter filter, example 'readme', 'jsx'">

                            <data-list
                                template-selector="#doc-item"
                                data-bind="docs"
                                root-element="ul"
                                root-class="links docs">
                            </data-list>

                            <template id="doc-item">
                                <li data-dir="${dir}" data-file="${file}">${file}</li>
                            </template>

                            <!--
                                The commented code below works to load automatically on page start, however
                                for this page JavaScript `click()` is used to load the main document.
                            -->
                            <!-- <markdown-content url="doc?dir=&file=README.md"></markdown-content> -->

                            <markdown-content
                                load-only-once
                                loading-selector="#loading-screen"
                                link-target="_blank"
                                link-rel="noopener"
                                link-root-url="https://github.com/dataformsjs/dataformsjs/blob/master/">
                            </markdown-content>
                        </is-loaded>
                    </json-data>
                </template>
            </url-route>
        </url-router>

        <template id="loading-screen">
            <div class="loading">Loading...</div>
        </template>

    </body>

    <script type="module" src="/js/web-components/url-router.js"></script>
    <script type="module" src="/js/web-components/json-data.js"></script>
    <script type="module" src="/js/web-components/data-list.js"></script>
    <script type="module" src="/js/web-components/spa-links.js"></script>
    <script type="module" src="/js/web-components/input-filter.js"></script>
    <script nomodule src="/js/web-components/polyfill.js"></script>

    <!-- Comment above scripts and un-comment this version test Polyfill in Modern Browsers -->
    <!-- <script src="/js/web-components/polyfill.js"></script> -->

    <!--
        [marked] requires `trimRight` for IE
    -->
    <script nomodule src="/js/scripts/polyfills.js"></script>

    <script>
        window.lazyLoad = {
            // In the example below [nomodule] can be used, however since <markdown-content>
            // is a built-in control it's handled automatically by [polyfill.js].
            markdown: {
                module: '/js/web-components/markdown-content.js',
                // nomodule: '/js/controls/markdown-content.js',
            },

            // Themes can easily be changed for [highlight.js] simply be using a different CSS file:
            //
            // highlightCss: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.2/build/styles/default.min.css',
            // highlightCss: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.2/build/styles/vs.min.css',
            highlightCss: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.2/build/styles/atom-one-dark.min.css',
            highlightJs: 'https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.1.2/build/highlight.min.js',

            // With this page [markdown-it] is used by default, however if "marked" or "remarkable"
            // were used instead with [lazy-load] then they would be used for rendering markdown.
            marked: 'https://cdn.jsdelivr.net/npm/marked@3.0.8/lib/marked.min.js',
            remarkable: 'https://cdn.jsdelivr.net/npm/remarkable@2.0.1/dist/remarkable.min.js',
            markdown_it: 'https://cdn.jsdelivr.net/npm/markdown-it@12.0.2/dist/markdown-it.min.js',
            markdown_it_emoji: 'https://cdn.jsdelivr.net/npm/markdown-it-emoji@2.0.0/dist/markdown-it-emoji.min.js',
        }
    </script>

    <script>
        'use strict';

        function setupDocLinks() {
            const links = document.querySelectorAll('ul.links.docs li');

            Array.prototype.forEach.call(links, function(link) {
                link.onclick = function(e) {
                    // Remove selected item
                    Array.prototype.forEach.call(links, function(link) {
                        link.style.fontWeight = '';
                    });

                    // Selected Item
                    const link = e.target;
                    const file = link.getAttribute('data-file');
                    const dir = link.getAttribute('data-dir');
                    const url = 'doc?dir=' + encodeURIComponent(dir) + '&file=' + encodeURIComponent(file);
                    link.style.fontWeight = 'bold';

                    // Download and Render Markdown
                    const md = document.querySelector('markdown-content');
                    md.clearContent();
                    md.showSource = file.endsWith('.txt');
                    md.url = url;
                };
            });

            const mainLink = document.querySelector('ul.links.docs li[data-dir=""][data-file="README.md"]');
            mainLink.click();
        }
    </script>
</html>
