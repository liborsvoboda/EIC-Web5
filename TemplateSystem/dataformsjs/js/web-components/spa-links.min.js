import{defineExtendsPolyfill}from"./utils.min.js";class SpaLinks extends HTMLElement{constructor(){super(),this.updateLinks=this.updateLinks.bind(this)}connectedCallback(){document.addEventListener("app:routeChanged",this.updateLinks),this.updateLinks()}disconnectedCallback(){document.removeEventListener("app:routeChanged",this.updateLinks)}static get observedAttributes(){return["item-selector","active-class"]}attributeChangedCallback(t){SpaLinks.observedAttributes.includes(t)&&this.updateLinks()}updateLinks(){let t=this.getAttribute("item-selector");t=null===t?"a":t;let e=this.getAttribute("active-class");e=null===e?"active":e;let s=this.querySelectorAll(t+"."+e);for(const t of s)t.classList.remove(e);const i=document.querySelector("url-router");let n;n=null!==i&&"history"!==i.getAttribute("mode")?""===window.location.hash?"#/":window.location.hash:window.location.pathname,s=this.querySelectorAll(t);for(const t of s){const s="A"===t.nodeName?t:t.querySelector("a"),i=t.getAttribute("data-nav-match");if(s){const a=s.getAttribute("href");!(a===n||"start"===i&&n.startsWith(a))||s!==t&&s.parentNode!==t||t.classList.add(e)}}}}window.customElements.define("spa-links",SpaLinks,{extends:"nav"}),defineExtendsPolyfill("spa-links","nav",(t=>{SpaLinks.prototype.updateLinks.apply(t)}));