import{showError}from"./utils.min.js";const markdownCache=[],maxCacheSize=100;function saveMarkdownToCache(t,e,r){markdownCache.length>100&&(markdownCache.length=0);for(let e=0,r=markdownCache.length;e<r;e++)if(t===markdownCache[e].url)return;markdownCache.push({url:t,content:e,errorMessage:r})}function getMarkdownFromCache(t){for(let e=0,r=markdownCache.length;e<r;e++)if(t===markdownCache[e].url)return markdownCache[e];return null}const shadowTmpl=document.createElement("template");shadowTmpl.innerHTML="\n    <style>\n        :host { display: block; }\n        :host([hidden]) { display: none; }\n    </style>\n    <slot></slot>\n";let returnCode=!1;function highlight(t,e){if(void 0===window.hljs)return returnCode?t:"";if(e&&hljs.getLanguage(e))try{return hljs.highlight(e,t).value}catch(t){console.warn(t)}try{return hljs.highlightAuto(t).value}catch(t){console.warn(t)}return returnCode?t:""}class MarkdownContent extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(shadowTmpl.content.cloneNode(!0)),this.content=null,this.errorMessage=null,this.isFetching=!1}connectedCallback(){const t=this.querySelector('script[type="text/markdown"]');t&&(this.content=t.innerHTML),this.render()}static get observedAttributes(){return["url","show-source"]}attributeChangedCallback(t,e,r){switch(t){case"url":e!==r&&this.fetch();break;case"show-source":e!==r&&this.render()}}clearContent(){this.content=null,this.render()}get url(){return this.getAttribute("url")}set url(t){this.setAttribute("url",t)}get showSource(){return this.hasAttribute("show-source")}set showSource(t){t?this.setAttribute("show-source",""):this.removeAttribute("show-source")}get loadOnlyOnce(){return this.hasAttribute("load-only-once")}set loadOnlyOnce(t){t?this.setAttribute("load-only-once",""):this.removeAttribute("load-only-once")}get value(){return this.content}set value(t){this.content=t,this.render()}fetch(){const t=this.url;if(!t)return showError(this,"Error - Unable to show Markdown content because [url] is not set."),void this.dispatchRendered();if(this.loadOnlyOnce){const e=getMarkdownFromCache(t);if(e)return this.content=e.content,this.errorMessage=e.errorMessage,void this.render()}const e=this.getAttribute("loading-selector");if(e){const t=document.querySelector(e);t?(this.innerHTML="",this.appendChild(t.content.cloneNode(!0))):console.warn(`Could not find template from <${this.tagName.toLowerCase()} [loading-selector="${e}"]>.`)}this.isFetching=!0,fetch(t).then((e=>{const r=e.status;if(r>=200&&r<300||304===r)return Promise.resolve(e);{const n=`Error loading markdown content from [${t}]. Server Response Code: ${r}, Response Text: ${e.statusText}`;return Promise.reject(n)}})).then((t=>t.text())).then((t=>{this.content=t,this.errorMessage=null,this.isFetching=!1,this.render()})).catch((t=>{this.errorMessage=t,this.isFetching=!1,this.render()})).finally((()=>{this.loadOnlyOnce&&saveMarkdownToCache(t,this.content,this.errorMessage)}))}dispatchRendered(){this.dispatchEvent(new Event("app:markdownRendered",{bubbles:!0}))}render(){if(this.isFetching)return;if(this.errorMessage)return showError(this,this.errorMessage),void this.dispatchRendered();if(null===this.content)return void(this.innerHTML="");if(this.showSource)return this.innerHTML="<pre></pre>",this.querySelector("pre").textContent=this.content,void this.dispatchRendered();let t,e;if(returnCode=!1,window.marked)returnCode=!0,marked.setOptions({highlight:highlight}),t=marked.marked&&marked.marked.parse?marked.marked.parse(this.content):marked(this.content);else if(window.markdownit)e=markdownit({html:!0,linkify:!0,typographer:!0,highlight:highlight}),window.markdownitEmoji&&e.use(markdownitEmoji),t=e.render(this.content);else{if(!window.remarkable)return showError(this,"Error - Unable to show Markdown content because a Markdown JavaScript library was not found on the page."),void this.dispatchRendered();e=new remarkable.Remarkable({html:!0,typographer:!0,highlight:highlight}).use(remarkable.linkify),t=e.render(this.content)}if(void 0!==window.DOMPurify&&(t=DOMPurify.sanitize(t)),this.innerHTML=t,void 0!==window.hljs){const t=this.querySelectorAll('code[class*="language-"]');for(let e of t)e.classList.add("hljs")}const r=this.getAttribute("link-target"),n=this.getAttribute("link-rel");if(r||n){const t=this.querySelectorAll("a");for(const e of t)e.target=r||e.target,e.rel=n||e.rel}if("false"!==this.getAttribute("use-root-url")){const t=this.url;let e;if(t){const r=t.split("/");e=t.substring(0,t.length-r[r.length-1].length)}let r=this.getAttribute("link-root-url");if(r=r||e,r){const t=this.querySelectorAll('a:not([href^="http:"]):not([href^="https:"])');for(const e of t){const t=e.getAttribute("href");e.setAttribute("data-original-href",t),e.setAttribute("href",r+t)}}const n=this.querySelectorAll('img:not([src^="http:"]):not([src^="https:"])');for(const t of n){const r=t.getAttribute("src");t.setAttribute("data-original-src",r),t.setAttribute("src",e+r)}}this.dispatchRendered()}}window.customElements.define("markdown-content",MarkdownContent);