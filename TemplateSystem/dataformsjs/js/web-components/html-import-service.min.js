import{WebComponentService}from"./WebComponentService.min.js";import{showError}from"./utils.min.js";const cachedTemplates=[];window.customElements.define("html-import-service",class extends WebComponentService{onLoad(t){t!==this&&this.refreshAllHtmlControls()}refreshAllHtmlControls(t){const e=String((new Date).getTime()),r=this,l=`[data-template-id]:not([data-updated-at="${e}"]),[data-template-url]:not([data-updated-at="${e}"])`;!function a(n){if(null===n)r.dispatchEvent(new Event("app:contentReady",{bubbles:!0})),t&&t(e);else try{r.refreshHtmlControl(n,(function(){n.setAttribute("data-updated-at",e),a(document.querySelector(l))}))}catch(t){n.setAttribute("data-updated-at",e),a(document.querySelector(l))}}(document.querySelector(l))}refreshHtmlControl(t,e){try{const r="string"==typeof t,l=t instanceof HTMLElement;if(!r&&!l)throw new TypeError("Invalid type for parameter [element] in the function [refreshHtmlControl()]: "+typeof t);if(r){const e=t;if(null===(t=document.getElementById(e)))throw new TypeError("Element not found for ["+e+"] when the function [refreshHtmlControl()] was called.")}if(void 0!==e&&"function"!=typeof e)throw new TypeError("[callback] was not defined as a [function] when the [refreshHtmlControl()] was called");const a=t.getAttribute("data-template-id"),n=t.getAttribute("data-template-url");if(null!==a&&null!==n)throw new TypeError("An element must have only one of the template attribute defined; either [data-template-id] or [data-template-url]. Both attributes are defined on this element.");if(null===a&&null===n)throw new TypeError("An element must have either attribute [data-template-id] or [data-template-url]. Neither attribute is defined for this element.");this.downloadTemplate(t,(function(r){r.error?showError(t,r.errorMessage):null===t.getAttribute("data-set-text-content")?t.innerHTML=r.html:t.textContent=r.html,void 0!==e&&e()}))}catch(e){if(console.error(e),null!==t&&t instanceof HTMLElement){let r=t.getAttribute("data-template-id"),l=t.getAttribute("data-template-url");r=null===r?"":' data-template-id="'+r+'"',l=null===l?"":' data-template-url="'+l+'"';let a="Error with Element <"+t.tagName.toLowerCase();a+=' id="'+t.id+'"',a+=' class="'+t.className+'"',a+=r+l+"> - ",showError(t,a+e.message)}throw e}}downloadTemplate(t,e){const r=t.getAttribute("data-template-id"),l=t.getAttribute("data-template-url");for(let t=0,a=cachedTemplates.length;t<a;t++){if(null!==r&&cachedTemplates[t].id===r)return void e(cachedTemplates[t]);if(null!==l&&cachedTemplates[t].url===l)return void e(cachedTemplates[t])}let a,n;if(null!==l)a=l;else{if(n=document.getElementById(r),null===n){const t="Script Tag for Template ID ["+r+"] does not exist.";return void this.callback(this.addTemplate(r,l,null,!0,t))}a=n.src?n.src:n.getAttribute("data-src")}null!==a&&""!==a?fetch(a).then((t=>t.text())).then((t=>{e(this.addTemplate(r,l,t))})).catch((t=>{const n="Error Downloading Template: ["+a+"], Error: "+t;e(this.addTemplate(r,l,null,!0,n))})):e(this.addTemplate(r,l,n.innerHTML))}addTemplate(t,e,r,l=!1,a=null){const n={id:t,url:e,html:r,error:l,errorMessage:a};return cachedTemplates.push(n),n}});