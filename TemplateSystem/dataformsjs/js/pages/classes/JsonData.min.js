class JsonData{constructor(){this.url="",this.submittedFetchUrl="",this.submittedFetchParams="",this.isLoading=!1,this.isLoaded=!1,this.hasError=!1,this.errorMessage=null,this.prop=null,this.loadOnlyOnce=!1,this.errorTextMissingUrl="Error, unable to fetch data. No URL [data-route | model.url | graphql] was specified for this current route.",this.errorTextFetchError="An error has occurred loading the data. Please refresh the page to try again and if the problem continues contact support.",this.errorTextGraphQLErrors="{count} GraphQL Errors occurred. See [app.activeModel.errors] in console for full details.",this.fetchTimeStart=null,this.fetchTimeComplete=null,this.loadCount=0,this.errorCount=0,this.onFetch=null,this.onError=null,this.graphqlQuery=null,this.graphqlId=null,this.graphqlSrc=null}css(){return"\n            .dataformsjs-view-loading .is-loaded { display:none; }\n            .dataformsjs-view-loading .has-error { display:none; }\n            .dataformsjs-view-loaded .is-loading { display:none; }\n            .dataformsjs-view-loaded .has-error { display:none; }\n            .dataformsjs-view-error .is-loading { display:none; }\n            .dataformsjs-view-error .is-loaded { display:none; }\n        "}fetchTimeInMilliseconds(){return null!==this.fetchTimeStart&&null!==this.fetchTimeComplete&&this.fetchTimeStart.getTime&&this.fetchTimeComplete.getTime?this.fetchTimeComplete.getTime()-this.fetchTimeStart.getTime():-1}fetchData(){if(!this.url)return this.isLoading=!1,this.isLoaded=!1,this.hasError=!0,this.errorMessage=this.errorTextMissingUrl,this.setViewClass("error"),void(0===this.loadCount&&0===this.errorCount||app.updateView());this.isLoading=!0,this.setViewClass("loading"),this.fetchTimeStart=new Date,this.fetchTimeComplete=null,this.submittedFetchUrl=this.graphqlQuery?this.url:app.buildUrl(this.url),this.submittedFetchParams=JSON.stringify(app.activeParameterList);let t=null;this.graphqlQuery&&("file://"===window.location.origin||"null"===window.location.origin?(this.submittedFetchUrl+=-1===this.submittedFetchUrl.indexOf("?")?"?":"&",this.submittedFetchUrl+="query="+encodeURIComponent(this.graphqlQuery.trim()),this.submittedFetchUrl+="&variables="+encodeURIComponent(JSON.stringify(app.buildGraphQLVariables(this.graphqlQuery,app.activeParameterList)))):t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:this.graphqlQuery,variables:app.buildGraphQLVariables(this.graphqlQuery,app.activeParameterList)})}),app.fetch(this.submittedFetchUrl,t).then((t=>{if("object"!=typeof t&&null!==t)throw new TypeError("Invalid Response type. Received data in format of ["+typeof t+"]");this.fetchTimeComplete=new Date,this.loadCount++,this.isLoading=!1,this.isLoaded=!0,this.hasError=!1,this.errorMessage=null,this.setViewClass("loaded"),this.graphqlQuery?("string"==typeof this.prop?(this[this.prop]=t.data,t.errors&&(this[this.prop].errors=t.errors)):(Object.assign(this,t.data),t.errors&&(this.errors=t.errors)),t.errors&&t.errors.length&&(1===t.errors.length&&t.errors[0].message?this.errorMessage="[GraphQL Error]: "+t.errors[0].message:this.errorMessage=this.errorTextGraphQLErrors.replace("{count}",t.errors.length),this.hasError=!0,this.setViewClass("error"),"function"==typeof this.onError&&this.onError())):"string"==typeof this.prop?this[this.prop]=t:Object.assign(this,t),"function"==typeof this.onFetch&&this.onFetch(t),app.updateView()})).catch((()=>{this.fetchTimeComplete=new Date,this.errorCount++,this.isLoading=!1,this.isLoaded=!1,this.hasError=!0,this.errorMessage=this.errorTextFetchError,this.setViewClass("error"),"function"==typeof this.onError&&this.onError(),app.updateView()}))}setViewClass(t){if("Text"!==app.activeController.viewEngine)return;const e=document.querySelector(app.settings.viewSelector);if(null!==e){if(null===t){const t=e.querySelectorAll(".is-loading, .has-error, .is-loaded");for(const e of t)e.style.display="none"}app.loadCss("dataformsjs-view-jsondata",this.css()),e.classList.remove("dataformsjs-view-loading"),e.classList.remove("dataformsjs-view-error"),e.classList.remove("dataformsjs-view-loaded"),null!==t&&e.classList.add("dataformsjs-view-"+t)}}unloadView(){this.setViewClass(null)}onRouteLoad(){this.loadOnlyOnce&&this.submittedFetchUrl===app.buildUrl(this.url)&&this.submittedFetchParams===JSON.stringify(app.activeParameterList)||(this.isLoaded=!1,this.hasError=!1),this.isLoaded?this.setViewClass("loaded"):this.graphqlId||this.graphqlSrc?(this.url||(this.url=app.settings.graphqlUrl),app.getGraphQL(this.graphqlId,this.graphqlSrc).then((t=>{this.graphqlQuery=t,this.fetchData()})).catch((t=>{app.showErrorAlert(t),this.fetchData()}))):this.fetchData()}onRouteUnload(){this.unloadView()}}app.addPage("JsonData",JsonData);