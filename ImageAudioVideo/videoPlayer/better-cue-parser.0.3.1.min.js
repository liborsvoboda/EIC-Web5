var betterCueParser;(()=>{"use strict";var e={761:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.parseCommand=void 0,r.parseCommand=function(e){let r;if(r=(e=e.trim()).match(/^([A-Z]+)\s+(.*)$/),!r)throw new Error("Not a command: "+e);const t=r[1];if(!t)throw new Error("Can not parse command from "+e);const n=function(e){let r=[];if('"'===e[0]){const t=e.indexOf('"',1);r.push(e.substring(1,t)),e=e.substring(t+1).trim()}return""!==e&&(r=r.concat(e.split(" "))),r}(r[2]);if(!n)throw new Error("Can not parse parameters from "+e);return{command:t,params:n}}},669:(e,r,t)=>{Object.defineProperty(r,"X",{value:!0}),r.Q=void 0;const n=t(761),o=t(207),s={CATALOG:function(e,r){r.catalog=e[0]},CDTEXTFILE:function(e,r){r.cdTextFile=e[0]},FILE:function(e,r){let t=r.getCurrentFile();t&&!t.name||(t=r.newFile()),t.name=e[0],t.type=e[1]},FLAGS:function(e,r){const t=r.getCurrentTrack();if(!t)throw new Error("No track for adding flag: "+e);t.flags=e.slice(0)},INDEX:function(e,r){const t=parseInt(e[0],10),n=i(e[1]),s=r.getCurrentTrack();if(!s)throw new Error("No track found for index "+e);if(s.postgap)throw new Error("POSTGAP should be after all indexes");if(t<0||t>99)throw new Error(`Index number must between 0 and 99: ${t}`);if(1===t){const e=r.getCurrentFile();e.tracks||(e.tracks=[]),e.tracks.push(s)}if(s.indexes){if(t!==s.indexes[s.indexes.length-1].number+1)throw new Error(`Invalid index number: ${t}, it should follow the last sequence`)}else{if(t>2)throw new Error(`Invalid index number ${t}, First index number must be 0 or 1`);s.indexes=[]}s.indexes.push(new o.Index(t,n))},ISRC:function(e,r){const t=r.getCurrentTrack();if(!t)throw new Error("No track for adding isrc: "+e);t.isrc=e[0]},PERFORMER:function(e,r){const t=r.getCurrentTrack();t?t.performer=e[0]:r.performer=e[0]},POSTGAP:function(e,r){const t=r.getCurrentTrack();if(!t)throw new Error("POSTGAP can only used in TRACK");if(t.postgap)throw new Error("only one POSTGAP is allowed for a track");t.postgap=i(e[0])},PREGAP:function(e,r){const t=r.getCurrentTrack();if(!t)throw new Error("PREGAP can only used in TRACK");if(t.pregap)throw new Error("only one PREGAP is allowed for a track");if(t.indexes&&t.indexes.length>0)throw new Error("PREGAP should be before any INDEX");t.pregap=i(e[0])},REM:function(e,r){r.rem||(r.rem=[]),r.rem.push(e.join(" "))},SONGWRITER:function(e,r){const t=r.getCurrentTrack();t?t.songWriter=e[0]:r.songWriter=e[0]},TITLE:function(e,r){const t=r.getCurrentTrack();t?t.title=e[0]:r.title=e[0]},TRACK:function(e,r){const t=parseInt(e[0],10);r.newTrack(t,e[1])}};function i(e){const r=e.match(/^(\d{2,}):(\d{2}):(\d{2})$/);if(!r)throw new Error(`Invalid time format: ${e}`);const t=new o.Time;if(t.min=parseInt(r[1],10),t.sec=parseInt(r[2],10),t.frame=parseInt(r[3],10),t.sec>59)throw new Error(`Time second should be less than 60: ${e}`);if(t.frame>74)throw new Error(`Time frame should be less than 75: ${e}`);return t}r.Q=function(e,r){const t=new o.CueSheet;let i;if("string"==typeof e)i=e;else{const n=new TextDecoder(r);i=n.decode(e),t.encoding=n.encoding}return i.replace(/\r\n/,"\n").split("\n").forEach((e=>{if(!e.match(/^\s*$/)){const r=n.parseCommand(e);s[r.command](r.params,t)}})),t.files[t.files.length-1].name||t.files.pop(),t}},207:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.CueSheet=r.Time=r.Index=r.File=r.Track=void 0;class t{constructor(e,r=null){this.type=r,this.title=null,this.flags=null,this.isrc=null,this.performer=null,this.songWriter=null,this.pregap=null,this.postgap=null,this.indexes=null,this.number=e}}r.Track=t;class n{constructor(){this.name=null,this.type=null,this.tracks=null}}r.File=n,r.Index=class{constructor(e=null,r=null){this.time=r,this.number=e}},r.Time=class{constructor(e=0,r=0,t=0){this.min=e,this.sec=r,this.frame=t}},r.CueSheet=class{constructor(){this.catalog=null,this.cdTextFile=null,this.files=null,this.performer=null,this.songWriter=null,this.title=null,this.rem=null}getCurrentFile(){return this.files&&this.files.length>0?this.files[this.files.length-1]:null}getCurrentTrack(){return this.track}newFile(){this.files||(this.files=[]);const e=new n;return this.files.push(e),e}newTrack(e,r){return this.track=new t(e,r),this}}}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var s=r[n]={exports:{}};return e[n](s,s.exports,t),s.exports}t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{t.r(n),t.d(n,{__esModule:()=>e.X,parse:()=>e.Q});var e=t(669)})(),betterCueParser=n})();