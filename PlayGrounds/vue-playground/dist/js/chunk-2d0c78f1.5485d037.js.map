{"version":3,"sources":["webpack:///./src/views/ConditionalRendering/README.md"],"names":["module","exports"],"mappings":"mGAAAA,EAAOC,QAAU","file":"js/chunk-2d0c78f1.5485d037.js","sourcesContent":["module.exports = \"<h1 id=\\\"conditional-rendering\\\">Conditional Rendering</h1>\\n<p>เราสามารถกำหนดการแสดงผลของ element ต่างๆ จากเงื่อนไขที่เรากำหนดได้โดยการใช้ attribute ที่มีชื่อว่า <code>v-if=&quot;&lt;conditions&gt;&quot;</code> <code>v-else</code> และ <code>v-else-if=&quot;&lt;conditions&gt;&quot;</code> สามารถอ่านเนื้อหาเพิ่มเติมได้ที่ <a href=\\\"https://vuejs.org/v2/guide/conditional.html\\\">https://vuejs.org/v2/guide/conditional.html</a></p>\\n<h2 id=\\\"ตัวอย่างที่-1-ใช้-v-if-อย่างเดียว\\\">ตัวอย่างที่ 1: ใช้ <code>v-if</code> อย่างเดียว</h2>\\n<p>ในตัวอย่างนี้ เป็นตัวอย่างของการเลือกรับข่าวสารจากทางเว็บไซต์ โดยจะแสดงข้อความก็ต่อเมื่อเราเลือกที่ตัว checkbox โดยเราจะทำการนำค่าของ checkbox ไปผูกกับ data ที่มีชื่อว่า <code>newsletter</code> เพื่อเก็บสถานะของ checkbox นั้น</p>\\n<p>เมื่อ checkbox ถูกเลือก ค่าของ checkbox ก็จะเปลี่ยนเป็น <code>true</code> ทำให้ attribute เงื่อนไขของ element ของข้อความที่กำหนดไว้ว่า <code>v-if=&quot;newsletter === true&quot;</code> เป็นจริง และแสดง element ของข้อความนั้นออกมา</p>\\n<h2 id=\\\"ตัวอย่างที่-2-ใช้-v-if-ร่วมกับ-v-else\\\">ตัวอย่างที่ 2: ใช้ <code>v-if</code> ร่วมกับ <code>v-else</code></h2>\\n<p>ในตัวอย่างนี้ เป็นตัวอย่างของการเลือกว่าเราทานเผ็ดหรือไม่ โดยจะแสดงสถานะว่าเราทานเผ็ดหรือไม่ โดยเราจะทำการนำค่าของ checkbox ไปผูกกับ data ที่มีชื่อว่า <code>spicy</code> เพื่อเก็บสถานะของ checkbox นั้น</p>\\n<p>เมื่อ checkbox ถูกเลือก ค่าของ checkbox ก็จะเปลี่ยนเป็น <code>true</code> ซึ่งทำให้ attribute เงื่อนไขของ element ข้อความทานเผ็ดที่กำหนดว่า <code>v-if=&quot;spicy === true&quot;</code> เป็นจริง ทำให้แสดง element ของข้อความทานเผ็ดออกมา</p>\\n<p>แต่เมื่อ checkbox ไม่ถูกเลือก ค่าของ checkbox จะเป็น <code>false</code> ซึ่งทำให้ผลลัพธ์ condition ในส่วนของ element ทานเผ็ดนั้นเป็น <code>false</code> และแสดง element ของ <code>v-else</code> ก็คือ element ของข้อความไม่ทานเผ็ดออกมา</p>\\n<p><code>v-else</code> นั้น ต้องเป็น element ที่อยู่ตัวถัดไปของ element <code>v-if</code> เสมอ</p>\\n<h2 id=\\\"ตัวอย่างที่-3-ใช้-v-if-ร่วมกับ-v-else-และ-v-else-if\\\">ตัวอย่างที่ 3: ใช้ <code>v-if</code> ร่วมกับ <code>v-else</code> และ <code>v-else-if</code></h2>\\n<p>ในตัวอย่างนี้ เป็นตัวอย่างของการเลือก topping ของไอศกรีมที่ต้องการ โดยจะแสดงว่า user เลือก topping ใดและต้องจ่ายเงินเพิ่มเท่าไร โดยเราจะทำการนำค่าของ radio ไปผูกกับ data ที่มีชื่อว่า <code>topping</code> เพื่อเก็บค่าของ radio ที่เลือก</p>\\n<p>เมื่อ radio &quot;สายรุ้ง&quot; ถูกเลือก ค่าของ <code>topping</code> จะเปลี่ยนเป็น <code>rainbow</code> ตามที่กำหนดไว้ ทำให้ condition ของ element ข้อความว่า &quot;เพิ่มสายรุ้ง&quot; ที่กำหนดไว้ว่า <code>v-if=&quot;topping === &#39;rainbow&#39;&quot;</code> เป็นจริง และแสดงผลออกมา</p>\\n<p>เมื่อ radio &quot;ช็อกโกแลต&quot; ถูกเลือก ค่าของ <code>topping</code> จะเปลี่ยนเป็น <code>chocolate</code> ตามที่กำหนดไว้ ทำให้ condition ของ element ข้อความว่า &quot;เพิ่มสายรุ้ง&quot; ไม่เป็นจริง และมาทำต่อที่ condition ถัดไปที่กำหนดไว้ว่า <code>v-else-if=&quot;topping === &#39;chocolate&#39;&quot;</code> ซึ่งเป็นจริง ทำให้แสดง element ของข้อความว่า &quot;เพิ่มช็อกโกแลต&quot; ออกมา</p>\\n<p>เมื่อ radio ที่ไม่ใช้ทั้ง &quot;สายรุ้ง&quot; และ &quot;ช็อกโกแลต&quot; ถูกเลือก (ไม่เพิ่ม) ก็จะทำให้ทั้งสอง condition ไม่เป็นจริง และแสดงผล element ของข้อความว่า &quot;ไม่เพิ่ม topping&quot; ออกมา ซึ่งมี attribute <code>v-else</code> อยู่</p>\\n<p><code>v-else</code> และ <code>v-else-if</code> นั้น ต้องเป็น element ที่อยู่ตัวถัดไปของ element <code>v-if</code> เสมอ</p>\\n\";"],"sourceRoot":""}