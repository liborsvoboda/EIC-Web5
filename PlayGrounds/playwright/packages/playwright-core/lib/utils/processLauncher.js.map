{"version":3,"file":"processLauncher.js","names":["_fs","_interopRequireDefault","require","childProcess","_interopRequireWildcard","readline","_","_fileUtils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","gracefullyCloseSet","exports","Set","killSet","gracefullyCloseAll","Promise","all","Array","from","map","gracefullyClose","catch","gracefullyProcessExitDoNotHang","code","setTimeout","process","exit","then","exitHandler","kill","sigintHandlerCalled","sigintHandler","exitWithCode130","isUnderTest","off","sigtermHandler","sighupHandler","installedHandlers","processHandlers","SIGINT","SIGTERM","SIGHUP","addProcessHandlerIfNeeded","name","add","on","removeProcessHandlersIfNeeded","size","handler","clear","launchProcess","options","stdio","log","command","args","join","spawnOptions","detached","platform","env","cwd","shell","spawnedProcess","spawn","cleanup","pid","errors","removeFolders","tempDirectories","length","failed","failedPromise","f","once","error","Error","reject","stdout","createInterface","input","data","stderr","processClosed","fulfillCleanup","waitForCleanup","exitCode","signal","delete","killProcessAndCleanup","onExit","handleSIGINT","handleSIGTERM","handleSIGHUP","gracefullyClosing","killProcess","attemptToGracefullyClose","killed","taskkillProcess","spawnSync","toString","dir","fs","rmSync","force","recursive","maxRetries","killAndWait","launchedProcess","envArrayToObject","result","value"],"sources":["../../src/utils/processLauncher.ts"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs';\nimport * as childProcess from 'child_process';\nimport * as readline from 'readline';\nimport { isUnderTest } from './';\nimport { removeFolders } from './fileUtils';\n\nexport type Env = {[key: string]: string | number | boolean | undefined};\n\nexport type LaunchProcessOptions = {\n  command: string,\n  args?: string[],\n  env?: Env,\n  shell?: boolean,\n\n  handleSIGINT?: boolean,\n  handleSIGTERM?: boolean,\n  handleSIGHUP?: boolean,\n  stdio: 'pipe' | 'stdin',\n  tempDirectories: string[],\n\n  cwd?: string,\n\n  // Note: attemptToGracefullyClose should reject if it does not close the browser.\n  attemptToGracefullyClose: () => Promise<any>,\n  onExit: (exitCode: number | null, signal: string | null) => void,\n  log: (message: string) => void,\n};\n\ntype LaunchResult = {\n  launchedProcess: childProcess.ChildProcess,\n  gracefullyClose: () => Promise<void>,\n  kill: () => Promise<void>,\n};\n\nexport const gracefullyCloseSet = new Set<() => Promise<void>>();\nconst killSet = new Set<() => void>();\n\nexport async function gracefullyCloseAll() {\n  await Promise.all(Array.from(gracefullyCloseSet).map(gracefullyClose => gracefullyClose().catch(e => {})));\n}\n\nexport function gracefullyProcessExitDoNotHang(code: number) {\n  // Force exit after 30 seconds.\n  // eslint-disable-next-line no-restricted-properties\n  setTimeout(() => process.exit(code), 30000);\n  // Meanwhile, try to gracefully close all browsers.\n  gracefullyCloseAll().then(() => {\n    // eslint-disable-next-line no-restricted-properties\n    process.exit(code);\n  });\n}\n\nfunction exitHandler() {\n  for (const kill of killSet)\n    kill();\n}\n\nlet sigintHandlerCalled = false;\nfunction sigintHandler() {\n  const exitWithCode130 = () => {\n    // Give tests a chance to see that launched process did exit and dispatch any async calls.\n    if (isUnderTest()) {\n      // eslint-disable-next-line no-restricted-properties\n      setTimeout(() => process.exit(130), 1000);\n    } else {\n      // eslint-disable-next-line no-restricted-properties\n      process.exit(130);\n    }\n  };\n\n  if (sigintHandlerCalled) {\n    // Resort to default handler from this point on, just in case we hang/stall.\n    process.off('SIGINT', sigintHandler);\n\n    // Upon second Ctrl+C, immediately kill browsers and exit.\n    // This prevents hanging in the case where closing the browser takes a lot of time or is buggy.\n    for (const kill of killSet)\n      kill();\n    exitWithCode130();\n  } else {\n    sigintHandlerCalled = true;\n    gracefullyCloseAll().then(() => exitWithCode130());\n  }\n}\n\nfunction sigtermHandler() {\n  gracefullyCloseAll();\n}\n\nfunction sighupHandler() {\n  gracefullyCloseAll();\n}\n\nconst installedHandlers = new Set<'exit' | 'SIGINT' | 'SIGTERM' | 'SIGHUP'>();\nconst processHandlers = {\n  exit: exitHandler,\n  SIGINT: sigintHandler,\n  SIGTERM: sigtermHandler,\n  SIGHUP: sighupHandler,\n};\nfunction addProcessHandlerIfNeeded(name: 'exit' | 'SIGINT' | 'SIGTERM' | 'SIGHUP') {\n  if (!installedHandlers.has(name)) {\n    installedHandlers.add(name);\n    process.on(name, processHandlers[name]);\n  }\n}\nfunction removeProcessHandlersIfNeeded() {\n  if (killSet.size)\n    return;\n  for (const handler of installedHandlers)\n    process.off(handler, processHandlers[handler]);\n  installedHandlers.clear();\n}\n\nexport async function launchProcess(options: LaunchProcessOptions): Promise<LaunchResult> {\n  const stdio: ('ignore' | 'pipe')[] = options.stdio === 'pipe' ? ['ignore', 'pipe', 'pipe', 'pipe', 'pipe'] : ['pipe', 'pipe', 'pipe'];\n  options.log(`<launching> ${options.command} ${options.args ? options.args.join(' ') : ''}`);\n  const spawnOptions: childProcess.SpawnOptions = {\n    // On non-windows platforms, `detached: true` makes child process a leader of a new\n    // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n    // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n    detached: process.platform !== 'win32',\n    env: (options.env as {[key: string]: string}),\n    cwd: options.cwd,\n    shell: options.shell,\n    stdio,\n  };\n  const spawnedProcess = childProcess.spawn(options.command, options.args || [], spawnOptions);\n\n  const cleanup = async () => {\n    options.log(`[pid=${spawnedProcess.pid || 'N/A'}] starting temporary directories cleanup`);\n    const errors = await removeFolders(options.tempDirectories);\n    for (let i = 0; i < options.tempDirectories.length; ++i) {\n      if (errors[i])\n        options.log(`[pid=${spawnedProcess.pid || 'N/A'}] exception while removing ${options.tempDirectories[i]}: ${errors[i]}`);\n    }\n    options.log(`[pid=${spawnedProcess.pid || 'N/A'}] finished temporary directories cleanup`);\n  };\n\n  // Prevent Unhandled 'error' event.\n  spawnedProcess.on('error', () => {});\n\n  if (!spawnedProcess.pid) {\n    let failed: (e: Error) => void;\n    const failedPromise = new Promise<Error>((f, r) => failed = f);\n    spawnedProcess.once('error', error => {\n      failed(new Error('Failed to launch: ' + error));\n    });\n    return cleanup().then(() => failedPromise).then(e => Promise.reject(e));\n  }\n  options.log(`<launched> pid=${spawnedProcess.pid}`);\n\n  const stdout = readline.createInterface({ input: spawnedProcess.stdout! });\n  stdout.on('line', (data: string) => {\n    options.log(`[pid=${spawnedProcess.pid}][out] ` + data);\n  });\n\n  const stderr = readline.createInterface({ input: spawnedProcess.stderr! });\n  stderr.on('line', (data: string) => {\n    options.log(`[pid=${spawnedProcess.pid}][err] ` + data);\n  });\n\n  let processClosed = false;\n  let fulfillCleanup = () => {};\n  const waitForCleanup = new Promise<void>(f => fulfillCleanup = f);\n  spawnedProcess.once('exit', (exitCode, signal) => {\n    options.log(`[pid=${spawnedProcess.pid}] <process did exit: exitCode=${exitCode}, signal=${signal}>`);\n    processClosed = true;\n    gracefullyCloseSet.delete(gracefullyClose);\n    killSet.delete(killProcessAndCleanup);\n    removeProcessHandlersIfNeeded();\n    options.onExit(exitCode, signal);\n    // Cleanup as process exits.\n    cleanup().then(fulfillCleanup);\n  });\n\n  addProcessHandlerIfNeeded('exit');\n  if (options.handleSIGINT)\n    addProcessHandlerIfNeeded('SIGINT');\n  if (options.handleSIGTERM)\n    addProcessHandlerIfNeeded('SIGTERM');\n  if (options.handleSIGHUP)\n    addProcessHandlerIfNeeded('SIGHUP');\n  gracefullyCloseSet.add(gracefullyClose);\n  killSet.add(killProcessAndCleanup);\n\n  let gracefullyClosing = false;\n  async function gracefullyClose(): Promise<void> {\n    // We keep listeners until we are done, to handle 'exit' and 'SIGINT' while\n    // asynchronously closing to prevent zombie processes. This might introduce\n    // reentrancy to this function, for example user sends SIGINT second time.\n    // In this case, let's forcefully kill the process.\n    if (gracefullyClosing) {\n      options.log(`[pid=${spawnedProcess.pid}] <forcefully close>`);\n      killProcess();\n      await waitForCleanup;  // Ensure the process is dead and we have cleaned up.\n      return;\n    }\n    gracefullyClosing = true;\n    options.log(`[pid=${spawnedProcess.pid}] <gracefully close start>`);\n    await options.attemptToGracefullyClose().catch(() => killProcess());\n    await waitForCleanup;  // Ensure the process is dead and we have cleaned up.\n    options.log(`[pid=${spawnedProcess.pid}] <gracefully close end>`);\n  }\n\n  // This method has to be sync to be used in the 'exit' event handler.\n  function killProcess() {\n    gracefullyCloseSet.delete(gracefullyClose);\n    killSet.delete(killProcessAndCleanup);\n    removeProcessHandlersIfNeeded();\n    options.log(`[pid=${spawnedProcess.pid}] <kill>`);\n    if (spawnedProcess.pid && !spawnedProcess.killed && !processClosed) {\n      options.log(`[pid=${spawnedProcess.pid}] <will force kill>`);\n      // Force kill the browser.\n      try {\n        if (process.platform === 'win32') {\n          const taskkillProcess = childProcess.spawnSync(`taskkill /pid ${spawnedProcess.pid} /T /F`, { shell: true });\n          const [stdout, stderr] = [taskkillProcess.stdout.toString(), taskkillProcess.stderr.toString()];\n          if (stdout)\n            options.log(`[pid=${spawnedProcess.pid}] taskkill stdout: ${stdout}`);\n          if (stderr)\n            options.log(`[pid=${spawnedProcess.pid}] taskkill stderr: ${stderr}`);\n        } else {\n          process.kill(-spawnedProcess.pid, 'SIGKILL');\n        }\n      } catch (e) {\n        options.log(`[pid=${spawnedProcess.pid}] exception while trying to kill process: ${e}`);\n        // the process might have already stopped\n      }\n    } else {\n      options.log(`[pid=${spawnedProcess.pid}] <skipped force kill spawnedProcess.killed=${spawnedProcess.killed} processClosed=${processClosed}>`);\n    }\n  }\n\n  function killProcessAndCleanup() {\n    killProcess();\n    options.log(`[pid=${spawnedProcess.pid || 'N/A'}] starting temporary directories cleanup`);\n    for (const dir of options.tempDirectories) {\n      try {\n        fs.rmSync(dir, { force: true, recursive: true, maxRetries: 5 });\n      } catch (e) {\n        options.log(`[pid=${spawnedProcess.pid || 'N/A'}] exception while removing ${dir}: ${e}`);\n      }\n    }\n    options.log(`[pid=${spawnedProcess.pid || 'N/A'}] finished temporary directories cleanup`);\n  }\n\n  function killAndWait() {\n    killProcess();\n    return waitForCleanup;\n  }\n\n  return { launchedProcess: spawnedProcess, gracefullyClose, kill: killAndWait };\n}\n\nexport function envArrayToObject(env: { name: string, value: string }[]): Env {\n  const result: Env = {};\n  for (const { name, value } of env)\n    result[name] = value;\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}