{"version":3,"file":"stackTrace.js","names":["_path","_interopRequireDefault","require","_utilsBundle","_","e","__esModule","default","rewriteErrorMessage","newMessage","_e$stack","lines","stack","split","filter","l","startsWith","message","errorTitle","name","length","join","CORE_DIR","path","resolve","__dirname","internalStackPrefixes","addInternalStackPrefix","prefix","push","exports","captureRawStack","stackTraceLimit","Error","error","captureLibraryStackTrace","isTesting","isUnderTest","parsedFrames","map","line","frame","parseStackTraceLine","file","isPlaywrightLibrary","parsed","frameText","Boolean","apiName","i","parsedFrame","normalizeAPIName","function","match","toLowerCase","f","process","env","PWDEBUGIMPL","some","frames","p","stringifyStackFrames","stackLines","column","captureLibraryStackText","splitErrorMessage","separationIdx","indexOf","slice","substring","formatCallLog","log","colors","dim"],"sources":["../../src/utils/stackTrace.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport { parseStackTraceLine } from '../utilsBundle';\nimport { isUnderTest } from './';\nimport type { StackFrame } from '@protocol/channels';\nimport { colors } from '../utilsBundle';\n\nexport function rewriteErrorMessage<E extends Error>(e: E, newMessage: string): E {\n  const lines: string[] = (e.stack?.split('\\n') || []).filter(l => l.startsWith('    at '));\n  e.message = newMessage;\n  const errorTitle = `${e.name}: ${e.message}`;\n  if (lines.length)\n    e.stack = `${errorTitle}\\n${lines.join('\\n')}`;\n  return e;\n}\n\nconst CORE_DIR = path.resolve(__dirname, '..', '..');\n\nconst internalStackPrefixes = [\n  CORE_DIR,\n];\nexport const addInternalStackPrefix = (prefix: string) => internalStackPrefixes.push(prefix);\n\nexport type RawStack = string[];\n\nexport function captureRawStack(): RawStack {\n  const stackTraceLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = 50;\n  const error = new Error();\n  const stack = error.stack || '';\n  Error.stackTraceLimit = stackTraceLimit;\n  return stack.split('\\n');\n}\n\nexport function captureLibraryStackTrace(): { frames: StackFrame[], apiName: string } {\n  const stack = captureRawStack();\n\n  const isTesting = isUnderTest();\n  type ParsedFrame = {\n    frame: StackFrame;\n    frameText: string;\n    isPlaywrightLibrary: boolean;\n  };\n  let parsedFrames = stack.map(line => {\n    const frame = parseStackTraceLine(line);\n    if (!frame || !frame.file)\n      return null;\n    const isPlaywrightLibrary = frame.file.startsWith(CORE_DIR);\n    const parsed: ParsedFrame = {\n      frame,\n      frameText: line,\n      isPlaywrightLibrary\n    };\n    return parsed;\n  }).filter(Boolean) as ParsedFrame[];\n\n  let apiName = '';\n\n  // Deepest transition between non-client code calling into client\n  // code is the api entry.\n  for (let i = 0; i < parsedFrames.length - 1; i++) {\n    const parsedFrame = parsedFrames[i];\n    if (parsedFrame.isPlaywrightLibrary && !parsedFrames[i + 1].isPlaywrightLibrary) {\n      apiName = apiName || normalizeAPIName(parsedFrame.frame.function);\n      break;\n    }\n  }\n\n  function normalizeAPIName(name?: string): string {\n    if (!name)\n      return '';\n    const match = name.match(/(API|JS|CDP|[A-Z])(.*)/);\n    if (!match)\n      return name;\n    return match[1].toLowerCase() + match[2];\n  }\n\n  // This is for the inspector so that it did not include the test runner stack frames.\n  parsedFrames = parsedFrames.filter(f => {\n    if (process.env.PWDEBUGIMPL)\n      return true;\n    if (internalStackPrefixes.some(prefix => f.frame.file.startsWith(prefix)))\n      return false;\n    return true;\n  });\n\n  return {\n    frames: parsedFrames.map(p => p.frame),\n    apiName\n  };\n}\n\nexport function stringifyStackFrames(frames: StackFrame[]): string[] {\n  const stackLines: string[] = [];\n  for (const frame of frames) {\n    if (frame.function)\n      stackLines.push(`    at ${frame.function} (${frame.file}:${frame.line}:${frame.column})`);\n    else\n      stackLines.push(`    at ${frame.file}:${frame.line}:${frame.column}`);\n  }\n  return stackLines;\n}\n\nexport function captureLibraryStackText() {\n  const parsed = captureLibraryStackTrace();\n  return stringifyStackFrames(parsed.frames).join('\\n');\n}\n\nexport function splitErrorMessage(message: string): { name: string, message: string } {\n  const separationIdx = message.indexOf(':');\n  return {\n    name: separationIdx !== -1 ? message.slice(0, separationIdx) : '',\n    message: separationIdx !== -1 && separationIdx + 2 <= message.length ? message.substring(separationIdx + 2) : message,\n  };\n}\n\nexport function formatCallLog(log: string[] | undefined): string {\n  if (!log || !log.some(l => !!l))\n    return '';\n  return `\nCall log:\n  ${colors.dim('- ' + (log || []).join('\\n  - '))}\n`;\n}\n\nexport type ExpectZone = {\n  title: string;\n  stepId: string;\n};\n"],"mappings":"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","ignoreList":[]}