{"version":3,"file":"cssTokenizer.js","names":["between","num","first","last","digit","code","hexdigit","uppercaseletter","lowercaseletter","letter","nonascii","namestartchar","namechar","nonprintable","newline","whitespace","maximumallowedcodepoint","InvalidCharacterError","Error","constructor","message","name","exports","preprocess","str","codepoints","i","length","charCodeAt","lead","trail","Math","pow","push","stringFromCode","String","fromCharCode","floor","tokenize","str1","tokens","line","column","lastLineLength","incrLineno","locStart","codepoint","next","undefined","consume","reconsume","eof","donothing","parseerror","consumeAToken","consumeComments","WhitespaceToken","consumeAStringToken","areAValidEscape","token","HashToken","wouldStartAnIdentifier","type","value","consumeAName","DelimToken","SuffixMatchToken","OpenParenToken","CloseParenToken","SubstringMatchToken","startsWithANumber","consumeANumericToken","CommaToken","CDCToken","startsWithAnIdentifier","consumeAnIdentlikeToken","ColonToken","SemicolonToken","CDOToken","AtKeywordToken","OpenSquareToken","startsWithAValidEscape","CloseSquareToken","PrefixMatchToken","OpenCurlyToken","DashMatchToken","ColumnToken","CloseCurlyToken","IncludeMatchToken","EOFToken","consumeANumber","DimensionToken","repr","unit","PercentageToken","NumberToken","toLowerCase","FunctionToken","consumeAURLToken","IdentToken","endingCodePoint","string","StringToken","BadStringToken","consumeEscape","URLToken","consumeTheRemnantsOfABadURL","BadURLToken","digits","total","parseInt","map","x","join","c1","c2","c3","wouldStartANumber","result","convertAStringToANumber","iterationCount","CSSParserToken","tokenType","toJSON","toString","toSource","args","GroupingToken","mirror","json","prototype","call","StringValuedToken","ASCIIMatch","val","escapeIdent","escapeHash","escapeString","source","slice","firstcode"],"sources":["../../../src/utils/isomorphic/cssTokenizer.ts"],"sourcesContent":["/* eslint-disable notice/notice */\n\n/*\n * The code in this file is licensed under the CC0 license.\n * http://creativecommons.org/publicdomain/zero/1.0/\n * It is free to use for any purpose. No attribution, permission, or reproduction of this license is required.\n */\n\n// Original at https://github.com/tabatkins/parse-css\n// Changes:\n//   - JS is replaced with TS.\n//   - Universal Module Definition wrapper is removed.\n//   - Everything not related to tokenizing - below the first exports block - is removed.\n\nexport interface CSSTokenInterface {\n  toSource(): string;\n  value: string | number | undefined;\n}\n\nconst between = function(num: number, first: number, last: number) { return num >= first && num <= last; };\nfunction digit(code: number) { return between(code, 0x30, 0x39); }\nfunction hexdigit(code: number) { return digit(code) || between(code, 0x41, 0x46) || between(code, 0x61, 0x66); }\nfunction uppercaseletter(code: number) { return between(code, 0x41, 0x5a); }\nfunction lowercaseletter(code: number) { return between(code, 0x61, 0x7a); }\nfunction letter(code: number) { return uppercaseletter(code) || lowercaseletter(code); }\nfunction nonascii(code: number) { return code >= 0x80; }\nfunction namestartchar(code: number) { return letter(code) || nonascii(code) || code === 0x5f; }\nfunction namechar(code: number) { return namestartchar(code) || digit(code) || code === 0x2d; }\nfunction nonprintable(code: number) { return between(code, 0, 8) || code === 0xb || between(code, 0xe, 0x1f) || code === 0x7f; }\nfunction newline(code: number) { return code === 0xa; }\nfunction whitespace(code: number) { return newline(code) || code === 9 || code === 0x20; }\n\nconst maximumallowedcodepoint = 0x10ffff;\n\nexport class InvalidCharacterError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidCharacterError';\n  }\n}\n\nfunction preprocess(str: string): number[] {\n  // Turn a string into an array of code points,\n  // following the preprocessing cleanup rules.\n  const codepoints = [];\n  for (let i = 0; i < str.length; i++) {\n    let code = str.charCodeAt(i);\n    if (code === 0xd && str.charCodeAt(i + 1) === 0xa) {\n      code = 0xa; i++;\n    }\n    if (code === 0xd || code === 0xc)\n      code = 0xa;\n    if (code === 0x0)\n      code = 0xfffd;\n    if (between(code, 0xd800, 0xdbff) && between(str.charCodeAt(i + 1), 0xdc00, 0xdfff)) {\n      // Decode a surrogate pair into an astral codepoint.\n      const lead = code - 0xd800;\n      const trail = str.charCodeAt(i + 1) - 0xdc00;\n      code = Math.pow(2, 16) + lead * Math.pow(2, 10) + trail;\n      i++;\n    }\n    codepoints.push(code);\n  }\n  return codepoints;\n}\n\nfunction stringFromCode(code: number) {\n  if (code <= 0xffff)\n    return String.fromCharCode(code);\n  // Otherwise, encode astral char as surrogate pair.\n  code -= Math.pow(2, 16);\n  const lead = Math.floor(code / Math.pow(2, 10)) + 0xd800;\n  const trail = code % Math.pow(2, 10) + 0xdc00;\n  return String.fromCharCode(lead) + String.fromCharCode(trail);\n}\n\nexport function tokenize(str1: string): CSSTokenInterface[] {\n  const str = preprocess(str1);\n  let i = -1;\n  const tokens: CSSTokenInterface[] = [];\n  let code: number;\n\n  // Line number information.\n  let line = 0;\n  let column = 0;\n  // The only use of lastLineLength is in reconsume().\n  let lastLineLength = 0;\n  const incrLineno = function() {\n    line += 1;\n    lastLineLength = column;\n    column = 0;\n  };\n  const locStart = { line: line, column: column };\n\n  const codepoint = function(i: number): number {\n    if (i >= str.length)\n      return -1;\n\n    return str[i];\n  };\n  const next = function(num?: number) {\n    if (num === undefined)\n      num = 1;\n    if (num > 3)\n      throw 'Spec Error: no more than three codepoints of lookahead.';\n    return codepoint(i + num);\n  };\n  const consume = function(num?: number): boolean {\n    if (num === undefined)\n      num = 1;\n    i += num;\n    code = codepoint(i);\n    if (newline(code))\n      incrLineno();\n    else\n      column += num;\n    // console.log('Consume '+i+' '+String.fromCharCode(code) + ' 0x' + code.toString(16));\n    return true;\n  };\n  const reconsume = function() {\n    i -= 1;\n    if (newline(code)) {\n      line -= 1;\n      column = lastLineLength;\n    } else {\n      column -= 1;\n    }\n    locStart.line = line;\n    locStart.column = column;\n    return true;\n  };\n  const eof = function(codepoint?: number): boolean {\n    if (codepoint === undefined)\n      codepoint = code;\n    return codepoint === -1;\n  };\n  const donothing = function() { };\n  const parseerror = function() {\n    // Language bindings don't like writing to stdout!\n    // console.log('Parse error at index ' + i + ', processing codepoint 0x' + code.toString(16) + '.'); return true;\n  };\n\n  const consumeAToken = function(): CSSTokenInterface {\n    consumeComments();\n    consume();\n    if (whitespace(code)) {\n      while (whitespace(next()))\n        consume();\n      return new WhitespaceToken();\n    } else if (code === 0x22) {return consumeAStringToken();} else if (code === 0x23) {\n      if (namechar(next()) || areAValidEscape(next(1), next(2))) {\n        const token = new HashToken('');\n        if (wouldStartAnIdentifier(next(1), next(2), next(3)))\n          token.type = 'id';\n        token.value = consumeAName();\n        return token;\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x24) {\n      if (next() === 0x3d) {\n        consume();\n        return new SuffixMatchToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x27) {return consumeAStringToken();} else if (code === 0x28) {return new OpenParenToken();} else if (code === 0x29) {return new CloseParenToken();} else if (code === 0x2a) {\n      if (next() === 0x3d) {\n        consume();\n        return new SubstringMatchToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x2b) {\n      if (startsWithANumber()) {\n        reconsume();\n        return consumeANumericToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x2c) {return new CommaToken();} else if (code === 0x2d) {\n      if (startsWithANumber()) {\n        reconsume();\n        return consumeANumericToken();\n      } else if (next(1) === 0x2d && next(2) === 0x3e) {\n        consume(2);\n        return new CDCToken();\n      } else if (startsWithAnIdentifier()) {\n        reconsume();\n        return consumeAnIdentlikeToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x2e) {\n      if (startsWithANumber()) {\n        reconsume();\n        return consumeANumericToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x3a) {return new ColonToken();} else if (code === 0x3b) {return new SemicolonToken();} else if (code === 0x3c) {\n      if (next(1) === 0x21 && next(2) === 0x2d && next(3) === 0x2d) {\n        consume(3);\n        return new CDOToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x40) {\n      if (wouldStartAnIdentifier(next(1), next(2), next(3)))\n        return new AtKeywordToken(consumeAName());\n      else\n        return new DelimToken(code);\n\n    } else if (code === 0x5b) {return new OpenSquareToken();} else if (code === 0x5c) {\n      if (startsWithAValidEscape()) {\n        reconsume();\n        return consumeAnIdentlikeToken();\n      } else {\n        parseerror();\n        return new DelimToken(code);\n      }\n    } else if (code === 0x5d) {return new CloseSquareToken();} else if (code === 0x5e) {\n      if (next() === 0x3d) {\n        consume();\n        return new PrefixMatchToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x7b) {return new OpenCurlyToken();} else if (code === 0x7c) {\n      if (next() === 0x3d) {\n        consume();\n        return new DashMatchToken();\n      } else if (next() === 0x7c) {\n        consume();\n        return new ColumnToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (code === 0x7d) {return new CloseCurlyToken();} else if (code === 0x7e) {\n      if (next() === 0x3d) {\n        consume();\n        return new IncludeMatchToken();\n      } else {\n        return new DelimToken(code);\n      }\n    } else if (digit(code)) {\n      reconsume();\n      return consumeANumericToken();\n    } else if (namestartchar(code)) {\n      reconsume();\n      return consumeAnIdentlikeToken();\n    } else if (eof()) {return new EOFToken();} else {return new DelimToken(code);}\n  };\n\n  const consumeComments = function() {\n    while (next(1) === 0x2f && next(2) === 0x2a) {\n      consume(2);\n      while (true) {\n        consume();\n        if (code === 0x2a && next() === 0x2f) {\n          consume();\n          break;\n        } else if (eof()) {\n          parseerror();\n          return;\n        }\n      }\n    }\n  };\n\n  const consumeANumericToken = function() {\n    const num = consumeANumber();\n    if (wouldStartAnIdentifier(next(1), next(2), next(3))) {\n      const token = new DimensionToken();\n      token.value = num.value;\n      token.repr = num.repr;\n      token.type = num.type;\n      token.unit = consumeAName();\n      return token;\n    } else if (next() === 0x25) {\n      consume();\n      const token = new PercentageToken();\n      token.value = num.value;\n      token.repr = num.repr;\n      return token;\n    } else {\n      const token = new NumberToken();\n      token.value = num.value;\n      token.repr = num.repr;\n      token.type = num.type;\n      return token;\n    }\n  };\n\n  const consumeAnIdentlikeToken = function(): CSSTokenInterface {\n    const str = consumeAName();\n    if (str.toLowerCase() === 'url' && next() === 0x28) {\n      consume();\n      while (whitespace(next(1)) && whitespace(next(2)))\n        consume();\n      if (next() === 0x22 || next() === 0x27)\n        return new FunctionToken(str);\n      else if (whitespace(next()) && (next(2) === 0x22 || next(2) === 0x27))\n        return new FunctionToken(str);\n      else\n        return consumeAURLToken();\n\n    } else if (next() === 0x28) {\n      consume();\n      return new FunctionToken(str);\n    } else {\n      return new IdentToken(str);\n    }\n  };\n\n  const consumeAStringToken = function(endingCodePoint?: number): CSSParserToken {\n    if (endingCodePoint === undefined)\n      endingCodePoint = code;\n    let string = '';\n    while (consume()) {\n      if (code === endingCodePoint || eof()) {\n        return new StringToken(string);\n      } else if (newline(code)) {\n        parseerror();\n        reconsume();\n        return new BadStringToken();\n      } else if (code === 0x5c) {\n        if (eof(next()))\n          donothing();\n        else if (newline(next()))\n          consume();\n        else\n          string += stringFromCode(consumeEscape());\n\n      } else {\n        string += stringFromCode(code);\n      }\n    }\n    throw new Error('Internal error');\n  };\n\n  const consumeAURLToken = function(): CSSTokenInterface {\n    const token = new URLToken('');\n    while (whitespace(next()))\n      consume();\n    if (eof(next()))\n      return token;\n    while (consume()) {\n      if (code === 0x29 || eof()) {\n        return token;\n      } else if (whitespace(code)) {\n        while (whitespace(next()))\n          consume();\n        if (next() === 0x29 || eof(next())) {\n          consume();\n          return token;\n        } else {\n          consumeTheRemnantsOfABadURL();\n          return new BadURLToken();\n        }\n      } else if (code === 0x22 || code === 0x27 || code === 0x28 || nonprintable(code)) {\n        parseerror();\n        consumeTheRemnantsOfABadURL();\n        return new BadURLToken();\n      } else if (code === 0x5c) {\n        if (startsWithAValidEscape()) {\n          token.value += stringFromCode(consumeEscape());\n        } else {\n          parseerror();\n          consumeTheRemnantsOfABadURL();\n          return new BadURLToken();\n        }\n      } else {\n        token.value += stringFromCode(code);\n      }\n    }\n    throw new Error('Internal error');\n  };\n\n  const consumeEscape = function() {\n    // Assume the current character is the \\\n    // and the next code point is not a newline.\n    consume();\n    if (hexdigit(code)) {\n      // Consume 1-6 hex digits\n      const digits = [code];\n      for (let total = 0; total < 5; total++) {\n        if (hexdigit(next())) {\n          consume();\n          digits.push(code);\n        } else {\n          break;\n        }\n      }\n      if (whitespace(next()))\n        consume();\n      let value = parseInt(digits.map(function(x) { return String.fromCharCode(x); }).join(''), 16);\n      if (value > maximumallowedcodepoint)\n        value = 0xfffd;\n      return value;\n    } else if (eof()) {\n      return 0xfffd;\n    } else {\n      return code;\n    }\n  };\n\n  const areAValidEscape = function(c1: number, c2: number) {\n    if (c1 !== 0x5c)\n      return false;\n    if (newline(c2))\n      return false;\n    return true;\n  };\n  const startsWithAValidEscape = function() {\n    return areAValidEscape(code, next());\n  };\n\n  const wouldStartAnIdentifier = function(c1: number, c2: number, c3: number) {\n    if (c1 === 0x2d)\n      return namestartchar(c2) || c2 === 0x2d || areAValidEscape(c2, c3);\n    else if (namestartchar(c1))\n      return true;\n    else if (c1 === 0x5c)\n      return areAValidEscape(c1, c2);\n    else\n      return false;\n\n  };\n  const startsWithAnIdentifier = function() {\n    return wouldStartAnIdentifier(code, next(1), next(2));\n  };\n\n  const wouldStartANumber = function(c1: number, c2: number, c3: number) {\n    if (c1 === 0x2b || c1 === 0x2d) {\n      if (digit(c2))\n        return true;\n      if (c2 === 0x2e && digit(c3))\n        return true;\n      return false;\n    } else if (c1 === 0x2e) {\n      if (digit(c2))\n        return true;\n      return false;\n    } else if (digit(c1)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const startsWithANumber = function() {\n    return wouldStartANumber(code, next(1), next(2));\n  };\n\n  const consumeAName = function(): string {\n    let result = '';\n    while (consume()) {\n      if (namechar(code)) {\n        result += stringFromCode(code);\n      } else if (startsWithAValidEscape()) {\n        result += stringFromCode(consumeEscape());\n      } else {\n        reconsume();\n        return result;\n      }\n    }\n    throw new Error('Internal parse error');\n  };\n\n  const consumeANumber = function() {\n    let repr = '';\n    let type = 'integer';\n    if (next() === 0x2b || next() === 0x2d) {\n      consume();\n      repr += stringFromCode(code);\n    }\n    while (digit(next())) {\n      consume();\n      repr += stringFromCode(code);\n    }\n    if (next(1) === 0x2e && digit(next(2))) {\n      consume();\n      repr += stringFromCode(code);\n      consume();\n      repr += stringFromCode(code);\n      type = 'number';\n      while (digit(next())) {\n        consume();\n        repr += stringFromCode(code);\n      }\n    }\n    const c1 = next(1), c2 = next(2), c3 = next(3);\n    if ((c1 === 0x45 || c1 === 0x65) && digit(c2)) {\n      consume();\n      repr += stringFromCode(code);\n      consume();\n      repr += stringFromCode(code);\n      type = 'number';\n      while (digit(next())) {\n        consume();\n        repr += stringFromCode(code);\n      }\n    } else if ((c1 === 0x45 || c1 === 0x65) && (c2 === 0x2b || c2 === 0x2d) && digit(c3)) {\n      consume();\n      repr += stringFromCode(code);\n      consume();\n      repr += stringFromCode(code);\n      consume();\n      repr += stringFromCode(code);\n      type = 'number';\n      while (digit(next())) {\n        consume();\n        repr += stringFromCode(code);\n      }\n    }\n    const value = convertAStringToANumber(repr);\n    return { type: type, value: value, repr: repr };\n  };\n\n  const convertAStringToANumber = function(string: string): number {\n    // CSS's number rules are identical to JS, afaik.\n    return +string;\n  };\n\n  const consumeTheRemnantsOfABadURL = function() {\n    while (consume()) {\n      if (code === 0x29 || eof()) {\n        return;\n      } else if (startsWithAValidEscape()) {\n        consumeEscape();\n        donothing();\n      } else {\n        donothing();\n      }\n    }\n  };\n\n  let iterationCount = 0;\n  while (!eof(next())) {\n    tokens.push(consumeAToken());\n    iterationCount++;\n    if (iterationCount > str.length * 2)\n      throw new Error(\"I'm infinite-looping!\");\n  }\n  return tokens;\n}\n\nexport class CSSParserToken implements CSSTokenInterface {\n  tokenType = '';\n  value: string | number | undefined;\n  toJSON(): any {\n    return { token: this.tokenType };\n  }\n  toString() { return this.tokenType; }\n  toSource() { return '' + this; }\n}\n\nexport class BadStringToken extends CSSParserToken {\n  override tokenType = 'BADSTRING';\n}\n\nexport class BadURLToken extends CSSParserToken {\n  override tokenType = 'BADURL';\n}\n\nexport class WhitespaceToken extends CSSParserToken {\n  override tokenType = 'WHITESPACE';\n  override toString() { return 'WS'; }\n  override toSource() { return ' '; }\n}\n\nexport class CDOToken extends CSSParserToken {\n  override tokenType = 'CDO';\n  override toSource() { return '<!--'; }\n}\n\nexport class CDCToken extends CSSParserToken {\n  override tokenType = 'CDC';\n  override toSource() { return '-->'; }\n}\n\nexport class ColonToken extends CSSParserToken {\n  override tokenType = ':';\n}\n\nexport class SemicolonToken extends CSSParserToken {\n  override tokenType = ';';\n}\n\nexport class CommaToken extends CSSParserToken {\n  override tokenType = ',';\n}\n\nexport class GroupingToken extends CSSParserToken {\n  override value = '';\n  mirror = '';\n}\n\nexport class OpenCurlyToken extends GroupingToken {\n  override tokenType = '{';\n  constructor() {\n    super();\n    this.value = '{';\n    this.mirror = '}';\n  }\n}\n\nexport class CloseCurlyToken extends GroupingToken {\n  override tokenType = '}';\n  constructor() {\n    super();\n    this.value = '}';\n    this.mirror = '{';\n  }\n}\n\nexport class OpenSquareToken extends GroupingToken {\n  override tokenType = '[';\n  constructor() {\n    super();\n    this.value = '[';\n    this.mirror = ']';\n  }\n}\n\nexport class CloseSquareToken extends GroupingToken {\n  override tokenType = ']';\n  constructor() {\n    super();\n    this.value = ']';\n    this.mirror = '[';\n  }\n}\n\nexport class OpenParenToken extends GroupingToken {\n  override tokenType = '(';\n  constructor() {\n    super();\n    this.value = '(';\n    this.mirror = ')';\n  }\n}\n\nexport class CloseParenToken extends GroupingToken {\n  override   tokenType = ')';\n  constructor() {\n    super();\n    this.value = ')';\n    this.mirror = '(';\n  }\n}\n\nexport class IncludeMatchToken extends CSSParserToken {\n  override tokenType = '~=';\n}\n\nexport class DashMatchToken extends CSSParserToken {\n  override tokenType = '|=';\n}\n\nexport class PrefixMatchToken extends CSSParserToken {\n  override tokenType = '^=';\n}\n\nexport class SuffixMatchToken extends CSSParserToken {\n  override tokenType = '$=';\n}\n\nexport class SubstringMatchToken extends CSSParserToken {\n  override tokenType = '*=';\n}\n\nexport class ColumnToken extends CSSParserToken {\n  override tokenType = '||';\n}\n\nexport class EOFToken extends CSSParserToken {\n  override tokenType = 'EOF';\n  override toSource() { return ''; }\n}\n\nexport class DelimToken extends CSSParserToken {\n  override tokenType = 'DELIM';\n  override value: string = '';\n\n  constructor(code: number) {\n    super();\n    this.value = stringFromCode(code);\n  }\n\n  override toString() { return 'DELIM(' + this.value + ')'; }\n\n  override toJSON() {\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\n    json.value = this.value;\n    return json;\n  }\n\n  override toSource() {\n    if (this.value === '\\\\')\n      return '\\\\\\n';\n    else\n      return this.value;\n  }\n}\n\nexport abstract class StringValuedToken extends CSSParserToken {\n  override value: string = '';\n  ASCIIMatch(str: string) {\n    return this.value.toLowerCase() === str.toLowerCase();\n  }\n\n  override toJSON() {\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\n    json.value = this.value;\n    return json;\n  }\n}\n\nexport class IdentToken extends StringValuedToken {\n  constructor(val: string) {\n    super();\n    this.value = val;\n  }\n\n  override tokenType = 'IDENT';\n  override toString() { return 'IDENT(' + this.value + ')'; }\n  override toSource() {\n    return escapeIdent(this.value);\n  }\n}\n\nexport class FunctionToken extends StringValuedToken {\n  override tokenType = 'FUNCTION';\n  mirror: string;\n  constructor(val: string) {\n    super();\n    this.value = val;\n    this.mirror = ')';\n  }\n\n  override toString() { return 'FUNCTION(' + this.value + ')'; }\n\n  override toSource() {\n    return escapeIdent(this.value) + '(';\n  }\n}\n\nexport class AtKeywordToken extends StringValuedToken {\n  override tokenType = 'AT-KEYWORD';\n  constructor(val: string) {\n    super();\n    this.value = val;\n  }\n  override toString() { return 'AT(' + this.value + ')'; }\n  override toSource() {\n    return '@' + escapeIdent(this.value);\n  }\n}\n\nexport class HashToken extends StringValuedToken {\n  override tokenType = 'HASH';\n  type: string;\n  constructor(val: string) {\n    super();\n    this.value = val;\n    this.type = 'unrestricted';\n  }\n\n  override toString() { return 'HASH(' + this.value + ')'; }\n\n  override toJSON() {\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\n    json.value = this.value;\n    json.type = this.type;\n    return json;\n  }\n\n  override toSource() {\n    if (this.type === 'id')\n      return '#' + escapeIdent(this.value);\n    else\n      return '#' + escapeHash(this.value);\n\n  }\n}\n\nexport class StringToken extends StringValuedToken {\n  override tokenType = 'STRING';\n  constructor(val: string) {\n    super();\n    this.value = val;\n  }\n\n  override toString() {\n    return '\"' + escapeString(this.value) + '\"';\n  }\n}\n\nexport class URLToken extends StringValuedToken {\n  override tokenType = 'URL';\n  constructor(val: string) {\n    super();\n    this.value = val;\n  }\n  override toString() { return 'URL(' + this.value + ')'; }\n  override toSource() {\n    return 'url(\"' + escapeString(this.value) + '\")';\n  }\n}\n\nexport class NumberToken extends CSSParserToken {\n  override tokenType = 'NUMBER';\n  type: string;\n  repr: string;\n\n  constructor() {\n    super();\n    this.type = 'integer';\n    this.repr = '';\n  }\n\n  override toString() {\n    if (this.type === 'integer')\n      return 'INT(' + this.value + ')';\n    return 'NUMBER(' + this.value + ')';\n  }\n  override toJSON() {\n    const json = super.toJSON();\n    json.value = this.value;\n    json.type = this.type;\n    json.repr = this.repr;\n    return json;\n  }\n  override toSource() { return this.repr; }\n}\n\n\nexport class PercentageToken extends CSSParserToken {\n  override tokenType = 'PERCENTAGE';\n  repr: string;\n  constructor() {\n    super();\n    this.repr = '';\n  }\n  override toString() { return 'PERCENTAGE(' + this.value + ')'; }\n  override toJSON() {\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\n    json.value = this.value;\n    json.repr = this.repr;\n    return json;\n  }\n  override toSource() { return this.repr + '%'; }\n}\n\nexport class DimensionToken extends CSSParserToken {\n  override tokenType = 'DIMENSION';\n  type: string;\n  repr: string;\n  unit: string;\n\n  constructor() {\n    super();\n    this.type = 'integer';\n    this.repr = '';\n    this.unit = '';\n  }\n\n  override toString() { return 'DIM(' + this.value + ',' + this.unit + ')'; }\n  override toJSON() {\n    const json = this.constructor.prototype.constructor.prototype.toJSON.call(this);\n    json.value = this.value;\n    json.type = this.type;\n    json.repr = this.repr;\n    json.unit = this.unit;\n    return json;\n  }\n  override toSource() {\n    const source = this.repr;\n    let unit = escapeIdent(this.unit);\n    if (unit[0].toLowerCase() === 'e' && (unit[1] === '-' || between(unit.charCodeAt(1), 0x30, 0x39))) {\n      // Unit is ambiguous with scinot\n      // Remove the leading \"e\", replace with escape.\n      unit = '\\\\65 ' + unit.slice(1, unit.length);\n    }\n    return source + unit;\n  }\n}\n\nfunction escapeIdent(string: string) {\n  string = '' + string;\n  let result = '';\n  const firstcode = string.charCodeAt(0);\n  for (let i = 0; i < string.length; i++) {\n    const code = string.charCodeAt(i);\n    if (code === 0x0)\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\n\n    if (\n      between(code, 0x1, 0x1f) || code === 0x7f ||\n      (i === 0 && between(code, 0x30, 0x39)) ||\n      (i === 1 && between(code, 0x30, 0x39) && firstcode === 0x2d)\n    )\n      result += '\\\\' + code.toString(16) + ' ';\n    else if (\n      code >= 0x80 ||\n      code === 0x2d ||\n      code === 0x5f ||\n      between(code, 0x30, 0x39) ||\n      between(code, 0x41, 0x5a) ||\n      between(code, 0x61, 0x7a)\n    )\n      result += string[i];\n    else\n      result += '\\\\' + string[i];\n\n  }\n  return result;\n}\n\nfunction escapeHash(string: string) {\n  // Escapes the contents of \"unrestricted\"-type hash tokens.\n  // Won't preserve the ID-ness of \"id\"-type hash tokens;\n  // use escapeIdent() for that.\n  string = '' + string;\n  let result = '';\n  for (let i = 0; i < string.length; i++) {\n    const code = string.charCodeAt(i);\n    if (code === 0x0)\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\n\n    if (\n      code >= 0x80 ||\n      code === 0x2d ||\n      code === 0x5f ||\n      between(code, 0x30, 0x39) ||\n      between(code, 0x41, 0x5a) ||\n      between(code, 0x61, 0x7a)\n    )\n      result += string[i];\n    else\n      result += '\\\\' + code.toString(16) + ' ';\n\n  }\n  return result;\n}\n\nfunction escapeString(string: string) {\n  string = '' + string;\n  let result = '';\n  for (let i = 0; i < string.length; i++) {\n    const code = string.charCodeAt(i);\n\n    if (code === 0x0)\n      throw new InvalidCharacterError('Invalid character: the input contains U+0000.');\n\n    if (between(code, 0x1, 0x1f) || code === 0x7f)\n      result += '\\\\' + code.toString(16) + ' ';\n    else if (code === 0x22 || code === 0x5c)\n      result += '\\\\' + string[i];\n    else\n      result += string[i];\n\n  }\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}