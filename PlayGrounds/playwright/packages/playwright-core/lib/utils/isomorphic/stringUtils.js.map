{"version":3,"file":"stringUtils.js","names":["escapeWithQuotes","text","char","stringified","JSON","stringify","escapedText","substring","length","replace","Error","isString","obj","String","toTitleCase","name","charAt","toUpperCase","toSnakeCase","toLowerCase","cssEscape","s","result","i","cssEscapeOne","quoteCSSAttributeValue","c","charCodeAt","toString","normalizedWhitespaceCache","cacheNormalizedWhitespaces","Map","normalizeWhiteSpace","_normalizedWhitespace","get","undefined","_normalizedWhitespace2","trim","set","normalizeEscapedRegexQuotes","source","escapeRegexForSelector","re","unicode","unicodeSets","escapeForTextSelector","exact","escapeForAttributeSelector","value","trimString","input","cap","suffix","chars","slice","join","trimStringWithEllipsis","escapeRegExp"],"sources":["../../../src/utils/isomorphic/stringUtils.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// NOTE: this function should not be used to escape any selectors.\nexport function escapeWithQuotes(text: string, char: string = '\\'') {\n  const stringified = JSON.stringify(text);\n  const escapedText = stringified.substring(1, stringified.length - 1).replace(/\\\\\"/g, '\"');\n  if (char === '\\'')\n    return char + escapedText.replace(/[']/g, '\\\\\\'') + char;\n  if (char === '\"')\n    return char + escapedText.replace(/[\"]/g, '\\\\\"') + char;\n  if (char === '`')\n    return char + escapedText.replace(/[`]/g, '`') + char;\n  throw new Error('Invalid escape char');\n}\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string' || obj instanceof String;\n}\n\nexport function toTitleCase(name: string) {\n  return name.charAt(0).toUpperCase() + name.substring(1);\n}\n\nexport function toSnakeCase(name: string): string {\n  // E.g. ignoreHTTPSErrors => ignore_https_errors.\n  return name.replace(/([a-z0-9])([A-Z])/g, '$1_$2').replace(/([A-Z])([A-Z][a-z])/g, '$1_$2').toLowerCase();\n}\n\nexport function cssEscape(s: string): string {\n  let result = '';\n  for (let i = 0; i < s.length; i++)\n    result += cssEscapeOne(s, i);\n  return result;\n}\n\nexport function quoteCSSAttributeValue(text: string): string {\n  return `\"${cssEscape(text).replace(/\\\\ /g, ' ')}\"`;\n}\n\nfunction cssEscapeOne(s: string, i: number): string {\n  // https://drafts.csswg.org/cssom/#serialize-an-identifier\n  const c = s.charCodeAt(i);\n  if (c === 0x0000)\n    return '\\uFFFD';\n  if ((c >= 0x0001 && c <= 0x001f) ||\n      (c >= 0x0030 && c <= 0x0039 && (i === 0 || (i === 1 && s.charCodeAt(0) === 0x002d))))\n    return '\\\\' + c.toString(16) + ' ';\n  if (i === 0 && c === 0x002d && s.length === 1)\n    return '\\\\' + s.charAt(i);\n  if (c >= 0x0080 || c === 0x002d || c === 0x005f || (c >= 0x0030 && c <= 0x0039) ||\n      (c >= 0x0041 && c <= 0x005a) || (c >= 0x0061 && c <= 0x007a))\n    return s.charAt(i);\n  return '\\\\' + s.charAt(i);\n}\n\nlet normalizedWhitespaceCache: Map<string, string> | undefined;\n\nexport function cacheNormalizedWhitespaces() {\n  normalizedWhitespaceCache = new Map();\n}\n\nexport function normalizeWhiteSpace(text: string): string {\n  let result = normalizedWhitespaceCache?.get(text);\n  if (result === undefined) {\n    result = text.replace(/\\u200b/g, '').trim().replace(/\\s+/g, ' ');\n    normalizedWhitespaceCache?.set(text, result);\n  }\n  return result;\n}\n\nexport function normalizeEscapedRegexQuotes(source: string) {\n  // This function reverses the effect of escapeRegexForSelector below.\n  // Odd number of backslashes followed by the quote -> remove unneeded backslash.\n  return source.replace(/(^|[^\\\\])(\\\\\\\\)*\\\\(['\"`])/g, '$1$2$3');\n}\n\nfunction escapeRegexForSelector(re: RegExp): string {\n  // Unicode mode does not allow \"identity character escapes\", so we do not escape and\n  // hope that it does not contain quotes and/or >> signs.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Character_escape\n  // TODO: rework RE usages in internal selectors away from literal representation to json, e.g. {source,flags}.\n  if (re.unicode || (re as any).unicodeSets)\n    return String(re);\n  // Even number of backslashes followed by the quote -> insert a backslash.\n  return String(re).replace(/(^|[^\\\\])(\\\\\\\\)*([\"'`])/g, '$1$2\\\\$3').replace(/>>/g, '\\\\>\\\\>');\n}\n\nexport function escapeForTextSelector(text: string | RegExp, exact: boolean): string {\n  if (typeof text !== 'string')\n    return escapeRegexForSelector(text);\n  return `${JSON.stringify(text)}${exact ? 's' : 'i'}`;\n}\n\nexport function escapeForAttributeSelector(value: string | RegExp, exact: boolean): string {\n  if (typeof value !== 'string')\n    return escapeRegexForSelector(value);\n  // TODO: this should actually be\n  //   cssEscape(value).replace(/\\\\ /g, ' ')\n  // However, our attribute selectors do not conform to CSS parsing spec,\n  // so we escape them differently.\n  return `\"${value.replace(/\\\\/g, '\\\\\\\\').replace(/[\"]/g, '\\\\\"')}\"${exact ? 's' : 'i'}`;\n}\n\nexport function trimString(input: string, cap: number, suffix: string = ''): string {\n  if (input.length <= cap)\n    return input;\n  const chars = [...input];\n  if (chars.length > cap)\n    return chars.slice(0, cap - suffix.length).join('') + suffix;\n  return chars.join('');\n}\n\nexport function trimStringWithEllipsis(input: string, cap: number): string {\n  return trimString(input, cap, '\\u2026');\n}\n\nexport function escapeRegExp(s: string) {\n  // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#escaping\n  return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n"],"mappings":"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","ignoreList":[]}