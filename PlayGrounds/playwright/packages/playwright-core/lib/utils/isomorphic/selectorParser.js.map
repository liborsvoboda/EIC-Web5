{"version":3,"file":"selectorParser.js","names":["_cssParser","require","kNestedSelectorNames","Set","kNestedSelectorNamesWithDistance","customCSSNames","exports","parseSelector","selector","parsedStrings","parseSelectorString","parts","part","name","body","parsedCSS","parseCSS","push","source","has","innerSelector","distance","unescaped","JSON","parse","Array","isArray","length","InvalidSelectorError","e","nested","parsed","lastFrame","reverse","find","lastFrameIndex","indexOf","selectorPartsEqual","slice","splice","capture","splitSelectorByFrame","selectorText","result","chunk","chunkStartIndex","i","list1","list2","stringifySelector","forceEngineName","map","p","includeEngine","startsWith","prefix","join","visitAllSelectorParts","visitor","visit","index","quote","start","append","substring","trim","eqIndex","match","test","undefined","includes","shouldIgnoreTextSelectorQuote","c","parseAttributeSelector","allowUnquotedStrings","wp","EOL","next","eat1","syntaxError","stage","skipSpaces","isCSSNameChar","char","readIdentifier","readQuotedString","readRegularExpression","inClass","flags","RegExp","message","readAttributeToken","token","readOperator","op","readAttribute","jsonPath","value","caseSensitive","operator","Number","isNaN","attributes"],"sources":["../../../src/utils/isomorphic/selectorParser.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CSSComplexSelectorList } from './cssParser';\nimport { InvalidSelectorError, parseCSS } from './cssParser';\nexport { InvalidSelectorError, isInvalidSelectorError } from './cssParser';\n\nexport type NestedSelectorBody = { parsed: ParsedSelector, distance?: number };\nconst kNestedSelectorNames = new Set(['internal:has', 'internal:has-not', 'internal:and', 'internal:or', 'internal:chain', 'left-of', 'right-of', 'above', 'below', 'near']);\nconst kNestedSelectorNamesWithDistance = new Set(['left-of', 'right-of', 'above', 'below', 'near']);\n\nexport type ParsedSelectorPart = {\n  name: string,\n  body: string | CSSComplexSelectorList | NestedSelectorBody,\n  source: string,\n};\n\nexport type ParsedSelector = {\n  parts: ParsedSelectorPart[],\n  capture?: number,\n};\n\ntype ParsedSelectorStrings = {\n  parts: { name: string, body: string }[],\n  capture?: number,\n};\n\nexport const customCSSNames = new Set(['not', 'is', 'where', 'has', 'scope', 'light', 'visible', 'text', 'text-matches', 'text-is', 'has-text', 'above', 'below', 'right-of', 'left-of', 'near', 'nth-match']);\n\nexport function parseSelector(selector: string): ParsedSelector {\n  const parsedStrings = parseSelectorString(selector);\n  const parts: ParsedSelectorPart[] = [];\n  for (const part of parsedStrings.parts) {\n    if (part.name === 'css' || part.name === 'css:light') {\n      if (part.name === 'css:light')\n        part.body = ':light(' + part.body + ')';\n      const parsedCSS = parseCSS(part.body, customCSSNames);\n      parts.push({\n        name: 'css',\n        body: parsedCSS.selector,\n        source: part.body\n      });\n      continue;\n    }\n    if (kNestedSelectorNames.has(part.name)) {\n      let innerSelector: string;\n      let distance: number | undefined;\n      try {\n        const unescaped = JSON.parse('[' + part.body + ']');\n        if (!Array.isArray(unescaped) || unescaped.length < 1 || unescaped.length > 2 || typeof unescaped[0] !== 'string')\n          throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\n        innerSelector = unescaped[0];\n        if (unescaped.length === 2) {\n          if (typeof unescaped[1] !== 'number' || !kNestedSelectorNamesWithDistance.has(part.name))\n            throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\n          distance = unescaped[1];\n        }\n      } catch (e) {\n        throw new InvalidSelectorError(`Malformed selector: ${part.name}=` + part.body);\n      }\n      const nested = { name: part.name, source: part.body, body: { parsed: parseSelector(innerSelector), distance } };\n      const lastFrame = [...nested.body.parsed.parts].reverse().find(part => part.name === 'internal:control' && part.body === 'enter-frame');\n      const lastFrameIndex = lastFrame ? nested.body.parsed.parts.indexOf(lastFrame) : -1;\n      // Allow nested selectors to start with the same frame selector.\n      if (lastFrameIndex !== -1 && selectorPartsEqual(nested.body.parsed.parts.slice(0, lastFrameIndex + 1), parts.slice(0, lastFrameIndex + 1)))\n        nested.body.parsed.parts.splice(0, lastFrameIndex + 1);\n      parts.push(nested);\n      continue;\n    }\n    parts.push({ ...part, source: part.body });\n  }\n  if (kNestedSelectorNames.has(parts[0].name))\n    throw new InvalidSelectorError(`\"${parts[0].name}\" selector cannot be first`);\n  return {\n    capture: parsedStrings.capture,\n    parts\n  };\n}\n\nexport function splitSelectorByFrame(selectorText: string): ParsedSelector[] {\n  const selector = parseSelector(selectorText);\n  const result: ParsedSelector[] = [];\n  let chunk: ParsedSelector = {\n    parts: [],\n  };\n  let chunkStartIndex = 0;\n  for (let i = 0; i < selector.parts.length; ++i) {\n    const part = selector.parts[i];\n    if (part.name === 'internal:control' && part.body === 'enter-frame') {\n      if (!chunk.parts.length)\n        throw new InvalidSelectorError('Selector cannot start with entering frame, select the iframe first');\n      result.push(chunk);\n      chunk = { parts: [] };\n      chunkStartIndex = i + 1;\n      continue;\n    }\n    if (selector.capture === i)\n      chunk.capture = i - chunkStartIndex;\n    chunk.parts.push(part);\n  }\n  if (!chunk.parts.length)\n    throw new InvalidSelectorError(`Selector cannot end with entering frame, while parsing selector ${selectorText}`);\n  result.push(chunk);\n  if (typeof selector.capture === 'number' && typeof result[result.length - 1].capture !== 'number')\n    throw new InvalidSelectorError(`Can not capture the selector before diving into the frame. Only use * after the last frame has been selected`);\n  return result;\n}\n\nfunction selectorPartsEqual(list1: ParsedSelectorPart[], list2: ParsedSelectorPart[]) {\n  return stringifySelector({ parts: list1 }) === stringifySelector({ parts: list2 });\n}\n\nexport function stringifySelector(selector: string | ParsedSelector, forceEngineName?: boolean): string {\n  if (typeof selector === 'string')\n    return selector;\n  return selector.parts.map((p, i) => {\n    let includeEngine = true;\n    if (!forceEngineName && i !== selector.capture) {\n      if (p.name === 'css')\n        includeEngine = false;\n      else if (p.name === 'xpath' && p.source.startsWith('//') || p.source.startsWith('..'))\n        includeEngine = false;\n    }\n    const prefix = includeEngine ? p.name + '=' : '';\n    return `${i === selector.capture ? '*' : ''}${prefix}${p.source}`;\n  }).join(' >> ');\n}\n\nexport function visitAllSelectorParts(selector: ParsedSelector, visitor: (part: ParsedSelectorPart, nested: boolean) => void) {\n  const visit = (selector: ParsedSelector, nested: boolean) => {\n    for (const part of selector.parts) {\n      visitor(part, nested);\n      if (kNestedSelectorNames.has(part.name))\n        visit((part.body as NestedSelectorBody).parsed, true);\n    }\n  };\n  visit(selector, false);\n}\n\nfunction parseSelectorString(selector: string): ParsedSelectorStrings {\n  let index = 0;\n  let quote: string | undefined;\n  let start = 0;\n  const result: ParsedSelectorStrings = { parts: [] };\n  const append = () => {\n    const part = selector.substring(start, index).trim();\n    const eqIndex = part.indexOf('=');\n    let name: string;\n    let body: string;\n    if (eqIndex !== -1 && part.substring(0, eqIndex).trim().match(/^[a-zA-Z_0-9-+:*]+$/)) {\n      name = part.substring(0, eqIndex).trim();\n      body = part.substring(eqIndex + 1);\n    } else if (part.length > 1 && part[0] === '\"' && part[part.length - 1] === '\"') {\n      name = 'text';\n      body = part;\n    } else if (part.length > 1 && part[0] === \"'\" && part[part.length - 1] === \"'\") {\n      name = 'text';\n      body = part;\n    } else if (/^\\(*\\/\\//.test(part) || part.startsWith('..')) {\n      // If selector starts with '//' or '//' prefixed with multiple opening\n      // parenthesis, consider xpath. @see https://github.com/microsoft/playwright/issues/817\n      // If selector starts with '..', consider xpath as well.\n      name = 'xpath';\n      body = part;\n    } else {\n      name = 'css';\n      body = part;\n    }\n    let capture = false;\n    if (name[0] === '*') {\n      capture = true;\n      name = name.substring(1);\n    }\n    result.parts.push({ name, body });\n    if (capture) {\n      if (result.capture !== undefined)\n        throw new InvalidSelectorError(`Only one of the selectors can capture using * modifier`);\n      result.capture = result.parts.length - 1;\n    }\n  };\n\n  if (!selector.includes('>>')) {\n    index = selector.length;\n    append();\n    return result;\n  }\n\n  const shouldIgnoreTextSelectorQuote = () => {\n    const prefix = selector.substring(start, index);\n    const match = prefix.match(/^\\s*text\\s*=(.*)$/);\n    // Must be a text selector with some text before the quote.\n    return !!match && !!match[1];\n  };\n\n  while (index < selector.length) {\n    const c = selector[index];\n    if (c === '\\\\' && index + 1 < selector.length) {\n      index += 2;\n    } else if (c === quote) {\n      quote = undefined;\n      index++;\n    } else if (!quote && (c === '\"' || c === '\\'' || c === '`') && !shouldIgnoreTextSelectorQuote()) {\n      quote = c;\n      index++;\n    } else if (!quote && c === '>' && selector[index + 1] === '>') {\n      append();\n      index += 2;\n      start = index;\n    } else {\n      index++;\n    }\n  }\n  append();\n  return result;\n}\n\nexport type AttributeSelectorOperator = '<truthy>'|'='|'*='|'|='|'^='|'$='|'~=';\nexport type AttributeSelectorPart = {\n  name: string,\n  jsonPath: string[],\n  op: AttributeSelectorOperator,\n  value: any,\n  caseSensitive: boolean,\n};\n\nexport type AttributeSelector = {\n  name: string,\n  attributes: AttributeSelectorPart[],\n};\n\n\nexport function parseAttributeSelector(selector: string, allowUnquotedStrings: boolean): AttributeSelector {\n  let wp = 0;\n  let EOL = selector.length === 0;\n\n  const next = () => selector[wp] || '';\n  const eat1 = () => {\n    const result = next();\n    ++wp;\n    EOL = wp >= selector.length;\n    return result;\n  };\n\n  const syntaxError = (stage: string|undefined) => {\n    if (EOL)\n      throw new InvalidSelectorError(`Unexpected end of selector while parsing selector \\`${selector}\\``);\n    throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - unexpected symbol \"${next()}\" at position ${wp}` + (stage ? ' during ' + stage : ''));\n  };\n\n  function skipSpaces() {\n    while (!EOL && /\\s/.test(next()))\n      eat1();\n  }\n\n  function isCSSNameChar(char: string) {\n    // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n    return (char >= '\\u0080')  // non-ascii\n        || (char >= '\\u0030' && char <= '\\u0039')  // digit\n        || (char >= '\\u0041' && char <= '\\u005a')  // uppercase letter\n        || (char >= '\\u0061' && char <= '\\u007a')  // lowercase letter\n        || (char >= '\\u0030' && char <= '\\u0039')  // digit\n        || char === '\\u005f'  // \"_\"\n        || char === '\\u002d';  // \"-\"\n  }\n\n  function readIdentifier() {\n    let result = '';\n    skipSpaces();\n    while (!EOL && isCSSNameChar(next()))\n      result += eat1();\n    return result;\n  }\n\n  function readQuotedString(quote: string) {\n    let result = eat1();\n    if (result !== quote)\n      syntaxError('parsing quoted string');\n    while (!EOL && next() !== quote) {\n      if (next() === '\\\\')\n        eat1();\n      result += eat1();\n    }\n    if (next() !== quote)\n      syntaxError('parsing quoted string');\n    result += eat1();\n    return result;\n  }\n\n  function readRegularExpression() {\n    if (eat1() !== '/')\n      syntaxError('parsing regular expression');\n    let source = '';\n    let inClass = false;\n    // https://262.ecma-international.org/11.0/#sec-literals-regular-expression-literals\n    while (!EOL) {\n      if (next() === '\\\\') {\n        source += eat1();\n        if (EOL)\n          syntaxError('parsing regular expression');\n      } else if (inClass && next() === ']') {\n        inClass = false;\n      } else if (!inClass && next() === '[') {\n        inClass = true;\n      } else if (!inClass && next() === '/') {\n        break;\n      }\n      source += eat1();\n    }\n    if (eat1() !== '/')\n      syntaxError('parsing regular expression');\n    let flags = '';\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n    while (!EOL && next().match(/[dgimsuy]/))\n      flags += eat1();\n    try {\n      return new RegExp(source, flags);\n    } catch (e) {\n      throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\`: ${e.message}`);\n    }\n  }\n\n  function readAttributeToken() {\n    let token = '';\n    skipSpaces();\n    if (next() === `'` || next() === `\"`)\n      token = readQuotedString(next()).slice(1, -1);\n    else\n      token = readIdentifier();\n    if (!token)\n      syntaxError('parsing property path');\n    return token;\n  }\n\n  function readOperator(): AttributeSelectorOperator {\n    skipSpaces();\n    let op = '';\n    if (!EOL)\n      op += eat1();\n    if (!EOL && (op !== '='))\n      op += eat1();\n    if (!['=', '*=', '^=', '$=', '|=', '~='].includes(op))\n      syntaxError('parsing operator');\n    return (op as AttributeSelectorOperator);\n  }\n\n  function readAttribute(): AttributeSelectorPart {\n    // skip leading [\n    eat1();\n\n    // read attribute name:\n    // foo.bar\n    // 'foo'  . \"ba zz\"\n    const jsonPath = [];\n    jsonPath.push(readAttributeToken());\n    skipSpaces();\n    while (next() === '.') {\n      eat1();\n      jsonPath.push(readAttributeToken());\n      skipSpaces();\n    }\n    // check property is truthy: [enabled]\n    if (next() === ']') {\n      eat1();\n      return { name: jsonPath.join('.'), jsonPath, op: '<truthy>', value: null, caseSensitive: false };\n    }\n\n    const operator = readOperator();\n\n    let value = undefined;\n    let caseSensitive = true;\n    skipSpaces();\n    if (next() === '/') {\n      if (operator !== '=')\n        throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - cannot use ${operator} in attribute with regular expression`);\n      value = readRegularExpression();\n    } else if (next() === `'` || next() === `\"`) {\n      value = readQuotedString(next()).slice(1, -1);\n      skipSpaces();\n      if (next() === 'i' || next() === 'I') {\n        caseSensitive = false;\n        eat1();\n      } else if (next() === 's' || next() === 'S') {\n        caseSensitive = true;\n        eat1();\n      }\n    } else {\n      value = '';\n      while (!EOL && (isCSSNameChar(next()) || next() === '+' || next() === '.'))\n        value += eat1();\n      if (value === 'true') {\n        value = true;\n      } else if (value === 'false') {\n        value = false;\n      } else {\n        if (!allowUnquotedStrings) {\n          value = +value;\n          if (Number.isNaN(value))\n            syntaxError('parsing attribute value');\n        }\n      }\n    }\n    skipSpaces();\n    if (next() !== ']')\n      syntaxError('parsing attribute value');\n\n    eat1();\n    if (operator !== '=' && typeof value !== 'string')\n      throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - cannot use ${operator} in attribute with non-string matching value - ${value}`);\n    return { name: jsonPath.join('.'), jsonPath, op: operator, value, caseSensitive };\n  }\n\n  const result: AttributeSelector = {\n    name: '',\n    attributes: [],\n  };\n  result.name = readIdentifier();\n  skipSpaces();\n  while (next() === '[') {\n    result.attributes.push(readAttribute());\n    skipSpaces();\n  }\n  if (!EOL)\n    syntaxError(undefined);\n  if (!result.name && !result.attributes.length)\n    throw new InvalidSelectorError(`Error while parsing selector \\`${selector}\\` - selector cannot be empty`);\n  return result;\n}\n"],"mappings":"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","ignoreList":[]}