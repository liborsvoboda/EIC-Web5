{"version":3,"file":"locatorGenerators.js","names":["_stringUtils","require","_selectorParser","asLocator","lang","selector","isFrameLocator","asLocators","maxOutputSize","preferredQuote","innerAsLocators","generators","parseSelector","e","factory","parsed","parts","index","length","name","body","nth","splice","tokens","nextBase","part","base","push","generateLocator","exact","text","detectExact","inners","map","inner","attrSelector","parseAttributeSelector","options","attrs","attr","attributes","caseSensitive","value","locatorType","nextPart","selectorPart","stringifySelector","locatorPart","includes","nextLocatorPart","hasText","hasNotText","combinedPart","chainLocators","locatorPartWithEngine","filter","Boolean","combineTokens","currentTokens","result","visit","taken","match","RegExp","endsWith","JSON","parse","substring","JavaScriptLocatorFactory","constructor","kind","undefined","quote","toHasText","isRegExp","regexToSourceString","attrString","join","toTestIdValue","toCallWithExact","Error","locators","re","normalizeEscapedRegexQuotes","String","method","_this$preferredQuote","escapeWithQuotes","exports","PythonLocatorFactory","regexToString","valueString","toSnakeCase","suffix","flags","source","replace","JavaLocatorFactory","clazz","toTitleCase","toUpperCase","CSharpLocatorFactory","toHasNotText","JsonlLocatorFactory","stringify","objects","l","i","next","javascript","python","java","csharp","jsonl","obj"],"sources":["../../../src/utils/isomorphic/locatorGenerators.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { escapeWithQuotes, normalizeEscapedRegexQuotes, toSnakeCase, toTitleCase } from './stringUtils';\nimport { type NestedSelectorBody, parseAttributeSelector, parseSelector, stringifySelector } from './selectorParser';\nimport type { ParsedSelector } from './selectorParser';\n\nexport type Language = 'javascript' | 'python' | 'java' | 'csharp' | 'jsonl';\nexport type LocatorType = 'default' | 'role' | 'text' | 'label' | 'placeholder' | 'alt' | 'title' | 'test-id' | 'nth' | 'first' | 'last' | 'has-text' | 'has-not-text' | 'has' | 'hasNot' | 'frame' | 'and' | 'or' | 'chain';\nexport type LocatorBase = 'page' | 'locator' | 'frame-locator';\nexport type Quote = '\\'' | '\"' | '`';\n\ntype LocatorOptions = {\n  attrs?: { name: string, value: string | boolean | number }[],\n  exact?: boolean,\n  name?: string | RegExp,\n  hasText?: string | RegExp,\n  hasNotText?: string | RegExp,\n};\nexport interface LocatorFactory {\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options?: LocatorOptions): string;\n  chainLocators(locators: string[]): string;\n}\n\nexport function asLocator(lang: Language, selector: string, isFrameLocator: boolean = false): string {\n  return asLocators(lang, selector, isFrameLocator)[0];\n}\n\nexport function asLocators(lang: Language, selector: string, isFrameLocator: boolean = false, maxOutputSize = 20, preferredQuote?: Quote): string[] {\n  try {\n    return innerAsLocators(new generators[lang](preferredQuote), parseSelector(selector), isFrameLocator, maxOutputSize);\n  } catch (e) {\n    // Tolerate invalid input.\n    return [selector];\n  }\n}\n\nfunction innerAsLocators(factory: LocatorFactory, parsed: ParsedSelector, isFrameLocator: boolean = false, maxOutputSize = 20): string[] {\n  const parts = [...parsed.parts];\n  // frameLocator('iframe').first is actually \"iframe >> nth=0 >> internal:control=enter-frame\"\n  // To make it easier to parse, we turn it into \"iframe >> internal:control=enter-frame >> nth=0\"\n  for (let index = 0; index < parts.length - 1; index++) {\n    if (parts[index].name === 'nth' && parts[index + 1].name === 'internal:control' && (parts[index + 1].body as string) === 'enter-frame') {\n      // Swap nth and enter-frame.\n      const [nth] = parts.splice(index, 1);\n      parts.splice(index + 1, 0, nth);\n    }\n  }\n\n  const tokens: string[][] = [];\n  let nextBase: LocatorBase = isFrameLocator ? 'frame-locator' : 'page';\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const base = nextBase;\n    nextBase = 'locator';\n\n    if (part.name === 'nth') {\n      if (part.body === '0')\n        tokens.push([factory.generateLocator(base, 'first', ''), factory.generateLocator(base, 'nth', '0')]);\n      else if (part.body === '-1')\n        tokens.push([factory.generateLocator(base, 'last', ''), factory.generateLocator(base, 'nth', '-1')]);\n      else\n        tokens.push([factory.generateLocator(base, 'nth', part.body as string)]);\n      continue;\n    }\n    if (part.name === 'internal:text') {\n      const { exact, text } = detectExact(part.body as string);\n      tokens.push([factory.generateLocator(base, 'text', text, { exact })]);\n      continue;\n    }\n    if (part.name === 'internal:has-text') {\n      const { exact, text } = detectExact(part.body as string);\n      // There is no locator equivalent for strict has-text, leave it as is.\n      if (!exact) {\n        tokens.push([factory.generateLocator(base, 'has-text', text, { exact })]);\n        continue;\n      }\n    }\n    if (part.name === 'internal:has-not-text') {\n      const { exact, text } = detectExact(part.body as string);\n      // There is no locator equivalent for strict has-not-text, leave it as is.\n      if (!exact) {\n        tokens.push([factory.generateLocator(base, 'has-not-text', text, { exact })]);\n        continue;\n      }\n    }\n    if (part.name === 'internal:has') {\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'has', inner)));\n      continue;\n    }\n    if (part.name === 'internal:has-not') {\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'hasNot', inner)));\n      continue;\n    }\n    if (part.name === 'internal:and') {\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'and', inner)));\n      continue;\n    }\n    if (part.name === 'internal:or') {\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'or', inner)));\n      continue;\n    }\n    if (part.name === 'internal:chain') {\n      const inners = innerAsLocators(factory, (part.body as NestedSelectorBody).parsed, false, maxOutputSize);\n      tokens.push(inners.map(inner => factory.generateLocator(base, 'chain', inner)));\n      continue;\n    }\n    if (part.name === 'internal:label') {\n      const { exact, text } = detectExact(part.body as string);\n      tokens.push([factory.generateLocator(base, 'label', text, { exact })]);\n      continue;\n    }\n    if (part.name === 'internal:role') {\n      const attrSelector = parseAttributeSelector(part.body as string, true);\n      const options: LocatorOptions = { attrs: [] };\n      for (const attr of attrSelector.attributes) {\n        if (attr.name === 'name') {\n          options.exact = attr.caseSensitive;\n          options.name = attr.value;\n        } else {\n          if (attr.name === 'level' && typeof attr.value === 'string')\n            attr.value = +attr.value;\n          options.attrs!.push({ name: attr.name === 'include-hidden' ? 'includeHidden' : attr.name, value: attr.value });\n        }\n      }\n      tokens.push([factory.generateLocator(base, 'role', attrSelector.name, options)]);\n      continue;\n    }\n    if (part.name === 'internal:testid') {\n      const attrSelector = parseAttributeSelector(part.body as string, true);\n      const { value } = attrSelector.attributes[0];\n      tokens.push([factory.generateLocator(base, 'test-id', value)]);\n      continue;\n    }\n    if (part.name === 'internal:attr') {\n      const attrSelector = parseAttributeSelector(part.body as string, true);\n      const { name, value, caseSensitive } = attrSelector.attributes[0];\n      const text = value as string | RegExp;\n      const exact = !!caseSensitive;\n      if (name === 'placeholder') {\n        tokens.push([factory.generateLocator(base, 'placeholder', text, { exact })]);\n        continue;\n      }\n      if (name === 'alt') {\n        tokens.push([factory.generateLocator(base, 'alt', text, { exact })]);\n        continue;\n      }\n      if (name === 'title') {\n        tokens.push([factory.generateLocator(base, 'title', text, { exact })]);\n        continue;\n      }\n    }\n\n    let locatorType: LocatorType = 'default';\n\n    const nextPart = parts[index + 1];\n    if (nextPart && nextPart.name === 'internal:control' && (nextPart.body as string) === 'enter-frame') {\n      locatorType = 'frame';\n      nextBase = 'frame-locator';\n      index++;\n    }\n\n    const selectorPart = stringifySelector({ parts: [part] });\n    const locatorPart = factory.generateLocator(base, locatorType, selectorPart);\n\n    if (locatorType === 'default' && nextPart && ['internal:has-text', 'internal:has-not-text'].includes(nextPart.name)) {\n      const { exact, text } = detectExact(nextPart.body as string);\n      // There is no locator equivalent for strict has-text and has-not-text, leave it as is.\n      if (!exact) {\n        const nextLocatorPart = factory.generateLocator('locator', nextPart.name === 'internal:has-text' ? 'has-text' : 'has-not-text', text, { exact });\n        const options: LocatorOptions = {};\n        if (nextPart.name === 'internal:has-text')\n          options.hasText = text;\n        else\n          options.hasNotText = text;\n        const combinedPart = factory.generateLocator(base, 'default', selectorPart, options);\n        // Two options:\n        // - locator('div').filter({ hasText: 'foo' })\n        // - locator('div', { hasText: 'foo' })\n        tokens.push([factory.chainLocators([locatorPart, nextLocatorPart]), combinedPart]);\n        index++;\n        continue;\n      }\n    }\n\n    // Selectors can be prefixed with engine name, e.g. xpath=//foo\n    let locatorPartWithEngine: string | undefined;\n    if (['xpath', 'css'].includes(part.name)) {\n      const selectorPart = stringifySelector({ parts: [part] }, /* forceEngineName */ true);\n      locatorPartWithEngine = factory.generateLocator(base, locatorType, selectorPart);\n    }\n\n    tokens.push([locatorPart, locatorPartWithEngine].filter(Boolean) as string[]);\n  }\n\n  return combineTokens(factory, tokens, maxOutputSize);\n}\n\nfunction combineTokens(factory: LocatorFactory, tokens: string[][], maxOutputSize: number): string[] {\n  const currentTokens = tokens.map(() => '');\n  const result: string[] = [];\n\n  const visit = (index: number) => {\n    if (index === tokens.length) {\n      result.push(factory.chainLocators(currentTokens));\n      return currentTokens.length < maxOutputSize;\n    }\n    for (const taken of tokens[index]) {\n      currentTokens[index] = taken;\n      if (!visit(index + 1))\n        return false;\n    }\n    return true;\n  };\n\n  visit(0);\n  return result;\n}\n\nfunction detectExact(text: string): { exact?: boolean, text: string | RegExp } {\n  let exact = false;\n  const match = text.match(/^\\/(.*)\\/([igm]*)$/);\n  if (match)\n    return { text: new RegExp(match[1], match[2]) };\n  if (text.endsWith('\"')) {\n    text = JSON.parse(text);\n    exact = true;\n  } else if (text.endsWith('\"s')) {\n    text = JSON.parse(text.substring(0, text.length - 1));\n    exact = true;\n  } else if (text.endsWith('\"i')) {\n    text = JSON.parse(text.substring(0, text.length - 1));\n    exact = false;\n  }\n  return { exact, text };\n}\n\nexport class JavaScriptLocatorFactory implements LocatorFactory {\n  constructor(private preferredQuote?: Quote) {}\n\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\n    switch (kind) {\n      case 'default':\n        if (options.hasText !== undefined)\n          return `locator(${this.quote(body as string)}, { hasText: ${this.toHasText(options.hasText)} })`;\n        if (options.hasNotText !== undefined)\n          return `locator(${this.quote(body as string)}, { hasNotText: ${this.toHasText(options.hasNotText)} })`;\n        return `locator(${this.quote(body as string)})`;\n      case 'frame':\n        return `frameLocator(${this.quote(body as string)})`;\n      case 'nth':\n        return `nth(${body})`;\n      case 'first':\n        return `first()`;\n      case 'last':\n        return `last()`;\n      case 'role':\n        const attrs: string[] = [];\n        if (isRegExp(options.name)) {\n          attrs.push(`name: ${this.regexToSourceString(options.name)}`);\n        } else if (typeof options.name === 'string') {\n          attrs.push(`name: ${this.quote(options.name)}`);\n          if (options.exact)\n            attrs.push(`exact: true`);\n        }\n        for (const { name, value } of options.attrs!)\n          attrs.push(`${name}: ${typeof value === 'string' ? this.quote(value) : value}`);\n        const attrString = attrs.length ? `, { ${attrs.join(', ')} }` : '';\n        return `getByRole(${this.quote(body as string)}${attrString})`;\n      case 'has-text':\n        return `filter({ hasText: ${this.toHasText(body)} })`;\n      case 'has-not-text':\n        return `filter({ hasNotText: ${this.toHasText(body)} })`;\n      case 'has':\n        return `filter({ has: ${body} })`;\n      case 'hasNot':\n        return `filter({ hasNot: ${body} })`;\n      case 'and':\n        return `and(${body})`;\n      case 'or':\n        return `or(${body})`;\n      case 'chain':\n        return `locator(${body})`;\n      case 'test-id':\n        return `getByTestId(${this.toTestIdValue(body)})`;\n      case 'text':\n        return this.toCallWithExact('getByText', body, !!options.exact);\n      case 'alt':\n        return this.toCallWithExact('getByAltText', body, !!options.exact);\n      case 'placeholder':\n        return this.toCallWithExact('getByPlaceholder', body, !!options.exact);\n      case 'label':\n        return this.toCallWithExact('getByLabel', body, !!options.exact);\n      case 'title':\n        return this.toCallWithExact('getByTitle', body, !!options.exact);\n      default:\n        throw new Error('Unknown selector kind ' + kind);\n    }\n  }\n\n  chainLocators(locators: string[]): string {\n    return locators.join('.');\n  }\n\n  private regexToSourceString(re: RegExp) {\n    return normalizeEscapedRegexQuotes(String(re));\n  }\n\n  private toCallWithExact(method: string, body: string | RegExp, exact?: boolean) {\n    if (isRegExp(body))\n      return `${method}(${this.regexToSourceString(body)})`;\n    return exact ? `${method}(${this.quote(body)}, { exact: true })` : `${method}(${this.quote(body)})`;\n  }\n\n  private toHasText(body: string | RegExp) {\n    if (isRegExp(body))\n      return this.regexToSourceString(body);\n    return this.quote(body);\n  }\n\n  private toTestIdValue(value: string | RegExp): string {\n    if (isRegExp(value))\n      return this.regexToSourceString(value);\n    return this.quote(value);\n  }\n\n  private quote(text: string) {\n    return escapeWithQuotes(text, this.preferredQuote ?? '\\'');\n  }\n}\n\nexport class PythonLocatorFactory implements LocatorFactory {\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\n    switch (kind) {\n      case 'default':\n        if (options.hasText !== undefined)\n          return `locator(${this.quote(body as string)}, has_text=${this.toHasText(options.hasText)})`;\n        if (options.hasNotText !== undefined)\n          return `locator(${this.quote(body as string)}, has_not_text=${this.toHasText(options.hasNotText)})`;\n        return `locator(${this.quote(body as string)})`;\n      case 'frame':\n        return `frame_locator(${this.quote(body as string)})`;\n      case 'nth':\n        return `nth(${body})`;\n      case 'first':\n        return `first`;\n      case 'last':\n        return `last`;\n      case 'role':\n        const attrs: string[] = [];\n        if (isRegExp(options.name)) {\n          attrs.push(`name=${this.regexToString(options.name)}`);\n        } else if (typeof options.name === 'string') {\n          attrs.push(`name=${this.quote(options.name)}`);\n          if (options.exact)\n            attrs.push(`exact=True`);\n        }\n        for (const { name, value } of options.attrs!) {\n          let valueString = typeof value === 'string' ? this.quote(value) : value;\n          if (typeof value === 'boolean')\n            valueString = value ? 'True' : 'False';\n          attrs.push(`${toSnakeCase(name)}=${valueString}`);\n        }\n        const attrString = attrs.length ? `, ${attrs.join(', ')}` : '';\n        return `get_by_role(${this.quote(body as string)}${attrString})`;\n      case 'has-text':\n        return `filter(has_text=${this.toHasText(body)})`;\n      case 'has-not-text':\n        return `filter(has_not_text=${this.toHasText(body)})`;\n      case 'has':\n        return `filter(has=${body})`;\n      case 'hasNot':\n        return `filter(has_not=${body})`;\n      case 'and':\n        return `and_(${body})`;\n      case 'or':\n        return `or_(${body})`;\n      case 'chain':\n        return `locator(${body})`;\n      case 'test-id':\n        return `get_by_test_id(${this.toTestIdValue(body)})`;\n      case 'text':\n        return this.toCallWithExact('get_by_text', body, !!options.exact);\n      case 'alt':\n        return this.toCallWithExact('get_by_alt_text', body, !!options.exact);\n      case 'placeholder':\n        return this.toCallWithExact('get_by_placeholder', body, !!options.exact);\n      case 'label':\n        return this.toCallWithExact('get_by_label', body, !!options.exact);\n      case 'title':\n        return this.toCallWithExact('get_by_title', body, !!options.exact);\n      default:\n        throw new Error('Unknown selector kind ' + kind);\n    }\n  }\n\n  chainLocators(locators: string[]): string {\n    return locators.join('.');\n  }\n\n  private regexToString(body: RegExp) {\n    const suffix = body.flags.includes('i') ? ', re.IGNORECASE' : '';\n    return `re.compile(r\"${normalizeEscapedRegexQuotes(body.source).replace(/\\\\\\//, '/').replace(/\"/g, '\\\\\"')}\"${suffix})`;\n  }\n\n  private toCallWithExact(method: string, body: string | RegExp, exact: boolean) {\n    if (isRegExp(body))\n      return `${method}(${this.regexToString(body)})`;\n    if (exact)\n      return `${method}(${this.quote(body)}, exact=True)`;\n    return `${method}(${this.quote(body)})`;\n  }\n\n  private toHasText(body: string | RegExp) {\n    if (isRegExp(body))\n      return this.regexToString(body);\n    return `${this.quote(body)}`;\n  }\n\n  private toTestIdValue(value: string | RegExp) {\n    if (isRegExp(value))\n      return this.regexToString(value);\n    return this.quote(value);\n  }\n\n  private quote(text: string) {\n    return escapeWithQuotes(text, '\\\"');\n  }\n}\n\nexport class JavaLocatorFactory implements LocatorFactory {\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\n    let clazz: string;\n    switch (base) {\n      case 'page': clazz = 'Page'; break;\n      case 'frame-locator': clazz = 'FrameLocator'; break;\n      case 'locator': clazz = 'Locator'; break;\n    }\n    switch (kind) {\n      case 'default':\n        if (options.hasText !== undefined)\n          return `locator(${this.quote(body as string)}, new ${clazz}.LocatorOptions().setHasText(${this.toHasText(options.hasText)}))`;\n        if (options.hasNotText !== undefined)\n          return `locator(${this.quote(body as string)}, new ${clazz}.LocatorOptions().setHasNotText(${this.toHasText(options.hasNotText)}))`;\n        return `locator(${this.quote(body as string)})`;\n      case 'frame':\n        return `frameLocator(${this.quote(body as string)})`;\n      case 'nth':\n        return `nth(${body})`;\n      case 'first':\n        return `first()`;\n      case 'last':\n        return `last()`;\n      case 'role':\n        const attrs: string[] = [];\n        if (isRegExp(options.name)) {\n          attrs.push(`.setName(${this.regexToString(options.name)})`);\n        } else if (typeof options.name === 'string') {\n          attrs.push(`.setName(${this.quote(options.name)})`);\n          if (options.exact)\n            attrs.push(`.setExact(true)`);\n        }\n        for (const { name, value } of options.attrs!)\n          attrs.push(`.set${toTitleCase(name)}(${typeof value === 'string' ? this.quote(value) : value})`);\n        const attrString = attrs.length ? `, new ${clazz}.GetByRoleOptions()${attrs.join('')}` : '';\n        return `getByRole(AriaRole.${toSnakeCase(body as string).toUpperCase()}${attrString})`;\n      case 'has-text':\n        return `filter(new ${clazz}.FilterOptions().setHasText(${this.toHasText(body)}))`;\n      case 'has-not-text':\n        return `filter(new ${clazz}.FilterOptions().setHasNotText(${this.toHasText(body)}))`;\n      case 'has':\n        return `filter(new ${clazz}.FilterOptions().setHas(${body}))`;\n      case 'hasNot':\n        return `filter(new ${clazz}.FilterOptions().setHasNot(${body}))`;\n      case 'and':\n        return `and(${body})`;\n      case 'or':\n        return `or(${body})`;\n      case 'chain':\n        return `locator(${body})`;\n      case 'test-id':\n        return `getByTestId(${this.toTestIdValue(body)})`;\n      case 'text':\n        return this.toCallWithExact(clazz, 'getByText', body, !!options.exact);\n      case 'alt':\n        return this.toCallWithExact(clazz, 'getByAltText', body, !!options.exact);\n      case 'placeholder':\n        return this.toCallWithExact(clazz, 'getByPlaceholder', body, !!options.exact);\n      case 'label':\n        return this.toCallWithExact(clazz, 'getByLabel', body, !!options.exact);\n      case 'title':\n        return this.toCallWithExact(clazz, 'getByTitle', body, !!options.exact);\n      default:\n        throw new Error('Unknown selector kind ' + kind);\n    }\n  }\n\n  chainLocators(locators: string[]): string {\n    return locators.join('.');\n  }\n\n  private regexToString(body: RegExp) {\n    const suffix = body.flags.includes('i') ? ', Pattern.CASE_INSENSITIVE' : '';\n    return `Pattern.compile(${this.quote(normalizeEscapedRegexQuotes(body.source))}${suffix})`;\n  }\n\n  private toCallWithExact(clazz: string, method: string, body: string | RegExp, exact: boolean) {\n    if (isRegExp(body))\n      return `${method}(${this.regexToString(body)})`;\n    if (exact)\n      return `${method}(${this.quote(body)}, new ${clazz}.${toTitleCase(method)}Options().setExact(true))`;\n    return `${method}(${this.quote(body)})`;\n  }\n\n  private toHasText(body: string | RegExp) {\n    if (isRegExp(body))\n      return this.regexToString(body);\n    return this.quote(body);\n  }\n\n  private toTestIdValue(value: string | RegExp) {\n    if (isRegExp(value))\n      return this.regexToString(value);\n    return this.quote(value);\n  }\n\n  private quote(text: string) {\n    return escapeWithQuotes(text, '\\\"');\n  }\n}\n\nexport class CSharpLocatorFactory implements LocatorFactory {\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\n    switch (kind) {\n      case 'default':\n        if (options.hasText !== undefined)\n          return `Locator(${this.quote(body as string)}, new() { ${this.toHasText(options.hasText)} })`;\n        if (options.hasNotText !== undefined)\n          return `Locator(${this.quote(body as string)}, new() { ${this.toHasNotText(options.hasNotText)} })`;\n        return `Locator(${this.quote(body as string)})`;\n      case 'frame':\n        return `FrameLocator(${this.quote(body as string)})`;\n      case 'nth':\n        return `Nth(${body})`;\n      case 'first':\n        return `First`;\n      case 'last':\n        return `Last`;\n      case 'role':\n        const attrs: string[] = [];\n        if (isRegExp(options.name)) {\n          attrs.push(`NameRegex = ${this.regexToString(options.name)}`);\n        } else if (typeof options.name === 'string') {\n          attrs.push(`Name = ${this.quote(options.name)}`);\n          if (options.exact)\n            attrs.push(`Exact = true`);\n        }\n        for (const { name, value } of options.attrs!)\n          attrs.push(`${toTitleCase(name)} = ${typeof value === 'string' ? this.quote(value) : value}`);\n        const attrString = attrs.length ? `, new() { ${attrs.join(', ')} }` : '';\n        return `GetByRole(AriaRole.${toTitleCase(body as string)}${attrString})`;\n      case 'has-text':\n        return `Filter(new() { ${this.toHasText(body)} })`;\n      case 'has-not-text':\n        return `Filter(new() { ${this.toHasNotText(body)} })`;\n      case 'has':\n        return `Filter(new() { Has = ${body} })`;\n      case 'hasNot':\n        return `Filter(new() { HasNot = ${body} })`;\n      case 'and':\n        return `And(${body})`;\n      case 'or':\n        return `Or(${body})`;\n      case 'chain':\n        return `Locator(${body})`;\n      case 'test-id':\n        return `GetByTestId(${this.toTestIdValue(body)})`;\n      case 'text':\n        return this.toCallWithExact('GetByText', body, !!options.exact);\n      case 'alt':\n        return this.toCallWithExact('GetByAltText', body, !!options.exact);\n      case 'placeholder':\n        return this.toCallWithExact('GetByPlaceholder', body, !!options.exact);\n      case 'label':\n        return this.toCallWithExact('GetByLabel', body, !!options.exact);\n      case 'title':\n        return this.toCallWithExact('GetByTitle', body, !!options.exact);\n      default:\n        throw new Error('Unknown selector kind ' + kind);\n    }\n  }\n\n  chainLocators(locators: string[]): string {\n    return locators.join('.');\n  }\n\n  private regexToString(body: RegExp): string {\n    const suffix = body.flags.includes('i') ? ', RegexOptions.IgnoreCase' : '';\n    return `new Regex(${this.quote(normalizeEscapedRegexQuotes(body.source))}${suffix})`;\n  }\n\n  private toCallWithExact(method: string, body: string | RegExp, exact: boolean) {\n    if (isRegExp(body))\n      return `${method}(${this.regexToString(body)})`;\n    if (exact)\n      return `${method}(${this.quote(body)}, new() { Exact = true })`;\n    return `${method}(${this.quote(body)})`;\n  }\n\n  private toHasText(body: string | RegExp) {\n    if (isRegExp(body))\n      return `HasTextRegex = ${this.regexToString(body)}`;\n    return `HasText = ${this.quote(body)}`;\n  }\n\n  private toTestIdValue(value: string | RegExp) {\n    if (isRegExp(value))\n      return this.regexToString(value);\n    return this.quote(value);\n  }\n\n  private toHasNotText(body: string | RegExp) {\n    if (isRegExp(body))\n      return `HasNotTextRegex = ${this.regexToString(body)}`;\n    return `HasNotText = ${this.quote(body)}`;\n  }\n\n  private quote(text: string) {\n    return escapeWithQuotes(text, '\\\"');\n  }\n}\n\nexport class JsonlLocatorFactory implements LocatorFactory {\n  generateLocator(base: LocatorBase, kind: LocatorType, body: string | RegExp, options: LocatorOptions = {}): string {\n    return JSON.stringify({\n      kind,\n      body,\n      options,\n    });\n  }\n\n  chainLocators(locators: string[]): string {\n    const objects = locators.map(l => JSON.parse(l));\n    for (let i = 0; i < objects.length - 1; ++i)\n      objects[i].next = objects[i + 1];\n    return JSON.stringify(objects[0]);\n  }\n}\n\nconst generators: Record<Language, new (preferredQuote?: Quote) => LocatorFactory> = {\n  javascript: JavaScriptLocatorFactory,\n  python: PythonLocatorFactory,\n  java: JavaLocatorFactory,\n  csharp: CSharpLocatorFactory,\n  jsonl: JsonlLocatorFactory,\n};\n\nfunction isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp;\n}\n"],"mappings":"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","ignoreList":[]}