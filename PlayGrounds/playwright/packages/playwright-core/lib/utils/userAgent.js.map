{"version":3,"file":"userAgent.js","names":["_child_process","require","_os","_interopRequireDefault","_linuxUtils","_ascii","e","__esModule","default","cachedUserAgent","getUserAgent","determineUserAgent","osIdentifier","osVersion","process","platform","version","os","release","split","execSync","stdio","toString","trim","distroInfo","getLinuxDistributionInfoSync","id","additionalTokens","env","CI","push","serializedTokens","length","join","embedderName","embedderVersion","getEmbedderName","getPlaywrightVersion","arch","PW_LANG_NAME","substring","slice","includes","_process$env$PW_LANG_","PW_LANG_NAME_VERSION","majorMinorOnly","PW_VERSION_OVERRIDE","userAgentVersionMatchesErrorMessage","userAgent","match","received","expected","wrapInASCIIBox"],"sources":["../../src/utils/userAgent.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { execSync } from 'child_process';\nimport os from 'os';\nimport { getLinuxDistributionInfoSync } from '../utils/linuxUtils';\nimport { wrapInASCIIBox } from './ascii';\n\nlet cachedUserAgent: string | undefined;\n\nexport function getUserAgent(): string {\n  if (cachedUserAgent)\n    return cachedUserAgent;\n  try {\n    cachedUserAgent = determineUserAgent();\n  } catch (e) {\n    cachedUserAgent = 'Playwright/unknown';\n  }\n  return cachedUserAgent;\n}\n\nfunction determineUserAgent(): string {\n  let osIdentifier = 'unknown';\n  let osVersion = 'unknown';\n  if (process.platform === 'win32') {\n    const version = os.release().split('.');\n    osIdentifier = 'windows';\n    osVersion = `${version[0]}.${version[1]}`;\n  } else if (process.platform === 'darwin') {\n    const version = execSync('sw_vers -productVersion', { stdio: ['ignore', 'pipe', 'ignore'] }).toString().trim().split('.');\n    osIdentifier = 'macOS';\n    osVersion = `${version[0]}.${version[1]}`;\n  } else if (process.platform === 'linux') {\n    const distroInfo = getLinuxDistributionInfoSync();\n    if (distroInfo) {\n      osIdentifier = distroInfo.id || 'linux';\n      osVersion = distroInfo.version || 'unknown';\n    } else {\n      // Linux distribution without /etc/os-release.\n      // Default to linux/unknown.\n      osIdentifier = 'linux';\n    }\n  }\n  const additionalTokens = [];\n  if (process.env.CI)\n    additionalTokens.push('CI/1');\n  const serializedTokens = additionalTokens.length ? ' ' + additionalTokens.join(' ') : '';\n\n  const { embedderName, embedderVersion } = getEmbedderName();\n  return `Playwright/${getPlaywrightVersion()} (${os.arch()}; ${osIdentifier} ${osVersion}) ${embedderName}/${embedderVersion}${serializedTokens}`;\n}\n\nexport function getEmbedderName(): { embedderName: string, embedderVersion: string } {\n  let embedderName = 'unknown';\n  let embedderVersion = 'unknown';\n  if (!process.env.PW_LANG_NAME) {\n    embedderName = 'node';\n    embedderVersion = process.version.substring(1).split('.').slice(0, 2).join('.');\n  } else if (['node', 'python', 'java', 'csharp'].includes(process.env.PW_LANG_NAME)) {\n    embedderName = process.env.PW_LANG_NAME;\n    embedderVersion = process.env.PW_LANG_NAME_VERSION ?? 'unknown';\n  }\n  return { embedderName, embedderVersion };\n}\n\nexport function getPlaywrightVersion(majorMinorOnly = false): string {\n  const version = process.env.PW_VERSION_OVERRIDE || require('./../../package.json').version;\n  return majorMinorOnly ? version.split('.').slice(0, 2).join('.') : version;\n}\n\nexport function userAgentVersionMatchesErrorMessage(userAgent: string) {\n  const match = userAgent.match(/^Playwright\\/(\\d+\\.\\d+\\.\\d+)/);\n  if (!match) {\n    // Cannot parse user agent - be lax.\n    return;\n  }\n  const received = match[1].split('.').slice(0, 2).join('.');\n  const expected = getPlaywrightVersion(true);\n  if (received !== expected) {\n    return wrapInASCIIBox([\n      `Playwright version mismatch:`,\n      `  - server version: v${expected}`,\n      `  - client version: v${received}`,\n      ``,\n      `If you are using VSCode extension, restart VSCode.`,\n      ``,\n      `If you are connecting to a remote service,`,\n      `keep your local Playwright version in sync`,\n      `with the remote service version.`,\n      ``,\n      `<3 Playwright Team`\n    ].join('\\n'), 1);\n  }\n}\n"],"mappings":";;;;;;;;;AAgBA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,GAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AAAyC,SAAAE,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAnBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,IAAIG,eAAmC;AAEhC,SAASC,YAAYA,CAAA,EAAW;EACrC,IAAID,eAAe,EACjB,OAAOA,eAAe;EACxB,IAAI;IACFA,eAAe,GAAGE,kBAAkB,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOL,CAAC,EAAE;IACVG,eAAe,GAAG,oBAAoB;EACxC;EACA,OAAOA,eAAe;AACxB;AAEA,SAASE,kBAAkBA,CAAA,EAAW;EACpC,IAAIC,YAAY,GAAG,SAAS;EAC5B,IAAIC,SAAS,GAAG,SAAS;EACzB,IAAIC,OAAO,CAACC,QAAQ,KAAK,OAAO,EAAE;IAChC,MAAMC,OAAO,GAAGC,WAAE,CAACC,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACvCP,YAAY,GAAG,SAAS;IACxBC,SAAS,GAAG,GAAGG,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;EAC3C,CAAC,MAAM,IAAIF,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE;IACxC,MAAMC,OAAO,GAAG,IAAAI,uBAAQ,EAAC,yBAAyB,EAAE;MAAEC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ;IAAE,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACJ,KAAK,CAAC,GAAG,CAAC;IACzHP,YAAY,GAAG,OAAO;IACtBC,SAAS,GAAG,GAAGG,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;EAC3C,CAAC,MAAM,IAAIF,OAAO,CAACC,QAAQ,KAAK,OAAO,EAAE;IACvC,MAAMS,UAAU,GAAG,IAAAC,wCAA4B,EAAC,CAAC;IACjD,IAAID,UAAU,EAAE;MACdZ,YAAY,GAAGY,UAAU,CAACE,EAAE,IAAI,OAAO;MACvCb,SAAS,GAAGW,UAAU,CAACR,OAAO,IAAI,SAAS;IAC7C,CAAC,MAAM;MACL;MACA;MACAJ,YAAY,GAAG,OAAO;IACxB;EACF;EACA,MAAMe,gBAAgB,GAAG,EAAE;EAC3B,IAAIb,OAAO,CAACc,GAAG,CAACC,EAAE,EAChBF,gBAAgB,CAACG,IAAI,CAAC,MAAM,CAAC;EAC/B,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAACK,MAAM,GAAG,GAAG,GAAGL,gBAAgB,CAACM,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;EAExF,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGC,eAAe,CAAC,CAAC;EAC3D,OAAO,cAAcC,oBAAoB,CAAC,CAAC,KAAKpB,WAAE,CAACqB,IAAI,CAAC,CAAC,KAAK1B,YAAY,IAAIC,SAAS,KAAKqB,YAAY,IAAIC,eAAe,GAAGJ,gBAAgB,EAAE;AAClJ;AAEO,SAASK,eAAeA,CAAA,EAAsD;EACnF,IAAIF,YAAY,GAAG,SAAS;EAC5B,IAAIC,eAAe,GAAG,SAAS;EAC/B,IAAI,CAACrB,OAAO,CAACc,GAAG,CAACW,YAAY,EAAE;IAC7BL,YAAY,GAAG,MAAM;IACrBC,eAAe,GAAGrB,OAAO,CAACE,OAAO,CAACwB,SAAS,CAAC,CAAC,CAAC,CAACrB,KAAK,CAAC,GAAG,CAAC,CAACsB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACR,IAAI,CAAC,GAAG,CAAC;EACjF,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAACS,QAAQ,CAAC5B,OAAO,CAACc,GAAG,CAACW,YAAY,CAAC,EAAE;IAAA,IAAAI,qBAAA;IAClFT,YAAY,GAAGpB,OAAO,CAACc,GAAG,CAACW,YAAY;IACvCJ,eAAe,IAAAQ,qBAAA,GAAG7B,OAAO,CAACc,GAAG,CAACgB,oBAAoB,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,SAAS;EACjE;EACA,OAAO;IAAET,YAAY;IAAEC;EAAgB,CAAC;AAC1C;AAEO,SAASE,oBAAoBA,CAACQ,cAAc,GAAG,KAAK,EAAU;EACnE,MAAM7B,OAAO,GAAGF,OAAO,CAACc,GAAG,CAACkB,mBAAmB,IAAI7C,OAAO,CAAC,sBAAsB,CAAC,CAACe,OAAO;EAC1F,OAAO6B,cAAc,GAAG7B,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAACsB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACR,IAAI,CAAC,GAAG,CAAC,GAAGjB,OAAO;AAC5E;AAEO,SAAS+B,mCAAmCA,CAACC,SAAiB,EAAE;EACrE,MAAMC,KAAK,GAAGD,SAAS,CAACC,KAAK,CAAC,8BAA8B,CAAC;EAC7D,IAAI,CAACA,KAAK,EAAE;IACV;IACA;EACF;EACA,MAAMC,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAC9B,KAAK,CAAC,GAAG,CAAC,CAACsB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACR,IAAI,CAAC,GAAG,CAAC;EAC1D,MAAMkB,QAAQ,GAAGd,oBAAoB,CAAC,IAAI,CAAC;EAC3C,IAAIa,QAAQ,KAAKC,QAAQ,EAAE;IACzB,OAAO,IAAAC,qBAAc,EAAC,CACpB,8BAA8B,EAC9B,wBAAwBD,QAAQ,EAAE,EAClC,wBAAwBD,QAAQ,EAAE,EAClC,EAAE,EACF,oDAAoD,EACpD,EAAE,EACF,4CAA4C,EAC5C,4CAA4C,EAC5C,kCAAkC,EAClC,EAAE,EACF,oBAAoB,CACrB,CAACjB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EAClB;AACF","ignoreList":[]}