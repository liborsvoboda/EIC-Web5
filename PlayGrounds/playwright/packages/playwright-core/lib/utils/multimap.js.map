{"version":3,"file":"multimap.js","names":["MultiMap","constructor","_map","Map","set","key","value","values","get","push","has","delete","includes","filter","v","deleteAll","hasValue","size","Symbol","iterator","keys","result","clear","exports"],"sources":["../../src/utils/multimap.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class MultiMap<K, V> {\n  private _map: Map<K, V[]>;\n\n  constructor() {\n    this._map = new Map<K, V[]>();\n  }\n\n  set(key: K, value: V) {\n    let values = this._map.get(key);\n    if (!values) {\n      values = [];\n      this._map.set(key, values);\n    }\n    values.push(value);\n  }\n\n  get(key: K): V[] {\n    return this._map.get(key) || [];\n  }\n\n  has(key: K): boolean {\n    return this._map.has(key);\n  }\n\n  delete(key: K, value: V) {\n    const values = this._map.get(key);\n    if (!values)\n      return;\n    if (values.includes(value))\n      this._map.set(key, values.filter(v => value !== v));\n  }\n\n  deleteAll(key: K) {\n    this._map.delete(key);\n  }\n\n  hasValue(key: K, value: V): boolean {\n    const values = this._map.get(key);\n    if (!values)\n      return false;\n    return values.includes(value);\n  }\n\n  get size(): number {\n    return this._map.size;\n  }\n\n  [Symbol.iterator](): Iterator<[K, V[]]> {\n    return this._map[Symbol.iterator]();\n  }\n\n  keys(): IterableIterator<K> {\n    return this._map.keys();\n  }\n\n  values(): Iterable<V> {\n    const result: V[] = [];\n    for (const key of this.keys())\n      result.push(...this.get(key));\n    return result;\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMA,QAAQ,CAAO;EAG1BC,WAAWA,CAAA,EAAG;IAAA,KAFNC,IAAI;IAGV,IAAI,CAACA,IAAI,GAAG,IAAIC,GAAG,CAAS,CAAC;EAC/B;EAEAC,GAAGA,CAACC,GAAM,EAAEC,KAAQ,EAAE;IACpB,IAAIC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC;IAC/B,IAAI,CAACE,MAAM,EAAE;MACXA,MAAM,GAAG,EAAE;MACX,IAAI,CAACL,IAAI,CAACE,GAAG,CAACC,GAAG,EAAEE,MAAM,CAAC;IAC5B;IACAA,MAAM,CAACE,IAAI,CAACH,KAAK,CAAC;EACpB;EAEAE,GAAGA,CAACH,GAAM,EAAO;IACf,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC,IAAI,EAAE;EACjC;EAEAK,GAAGA,CAACL,GAAM,EAAW;IACnB,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAACL,GAAG,CAAC;EAC3B;EAEAM,MAAMA,CAACN,GAAM,EAAEC,KAAQ,EAAE;IACvB,MAAMC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC;IACjC,IAAI,CAACE,MAAM,EACT;IACF,IAAIA,MAAM,CAACK,QAAQ,CAACN,KAAK,CAAC,EACxB,IAAI,CAACJ,IAAI,CAACE,GAAG,CAACC,GAAG,EAAEE,MAAM,CAACM,MAAM,CAACC,CAAC,IAAIR,KAAK,KAAKQ,CAAC,CAAC,CAAC;EACvD;EAEAC,SAASA,CAACV,GAAM,EAAE;IAChB,IAAI,CAACH,IAAI,CAACS,MAAM,CAACN,GAAG,CAAC;EACvB;EAEAW,QAAQA,CAACX,GAAM,EAAEC,KAAQ,EAAW;IAClC,MAAMC,MAAM,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAACH,GAAG,CAAC;IACjC,IAAI,CAACE,MAAM,EACT,OAAO,KAAK;IACd,OAAOA,MAAM,CAACK,QAAQ,CAACN,KAAK,CAAC;EAC/B;EAEA,IAAIW,IAAIA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACf,IAAI,CAACe,IAAI;EACvB;EAEA,CAACC,MAAM,CAACC,QAAQ,IAAwB;IACtC,OAAO,IAAI,CAACjB,IAAI,CAACgB,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;EACrC;EAEAC,IAAIA,CAAA,EAAwB;IAC1B,OAAO,IAAI,CAAClB,IAAI,CAACkB,IAAI,CAAC,CAAC;EACzB;EAEAb,MAAMA,CAAA,EAAgB;IACpB,MAAMc,MAAW,GAAG,EAAE;IACtB,KAAK,MAAMhB,GAAG,IAAI,IAAI,CAACe,IAAI,CAAC,CAAC,EAC3BC,MAAM,CAACZ,IAAI,CAAC,GAAG,IAAI,CAACD,GAAG,CAACH,GAAG,CAAC,CAAC;IAC/B,OAAOgB,MAAM;EACf;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAACpB,IAAI,CAACoB,KAAK,CAAC,CAAC;EACnB;AACF;AAACC,OAAA,CAAAvB,QAAA,GAAAA,QAAA","ignoreList":[]}