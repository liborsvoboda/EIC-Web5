{"version":3,"file":"task.js","names":["makeWaitForNextTask","process","versions","electron","callback","setTimeout","parseInt","node","setImmediate","spinning","callbacks","loop","shift","push"],"sources":["../../src/utils/task.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// See https://joel.tools/microtasks/\nexport function makeWaitForNextTask() {\n  // As of Mar 2021, Electron v12 doesn't create new task with `setImmediate` despite\n  // using Node 14 internally, so we fallback to `setTimeout(0)` instead.\n  // @see https://github.com/electron/electron/issues/28261\n  if ((process.versions as any).electron)\n    return (callback: () => void) => setTimeout(callback, 0);\n  if (parseInt(process.versions.node, 10) >= 11)\n    return setImmediate;\n\n  // Unlike Node 11, Node 10 and less have a bug with Task and MicroTask execution order:\n  // - https://github.com/nodejs/node/issues/22257\n  //\n  // So we can't simply run setImmediate to dispatch code in a following task.\n  // However, we can run setImmediate from-inside setImmediate to make sure we're getting\n  // in the following task.\n\n  let spinning = false;\n  const callbacks: (() => void)[] = [];\n  const loop = () => {\n    const callback = callbacks.shift();\n    if (!callback) {\n      spinning = false;\n      return;\n    }\n    setImmediate(loop);\n    // Make sure to call callback() as the last thing since it's\n    // untrusted code that might throw.\n    callback();\n  };\n\n  return (callback: () => void) => {\n    callbacks.push(callback);\n    if (!spinning) {\n      spinning = true;\n      setImmediate(loop);\n    }\n  };\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,SAASA,mBAAmBA,CAAA,EAAG;EACpC;EACA;EACA;EACA,IAAKC,OAAO,CAACC,QAAQ,CAASC,QAAQ,EACpC,OAAQC,QAAoB,IAAKC,UAAU,CAACD,QAAQ,EAAE,CAAC,CAAC;EAC1D,IAAIE,QAAQ,CAACL,OAAO,CAACC,QAAQ,CAACK,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAC3C,OAAOC,YAAY;;EAErB;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,QAAQ,GAAG,KAAK;EACpB,MAAMC,SAAyB,GAAG,EAAE;EACpC,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACjB,MAAMP,QAAQ,GAAGM,SAAS,CAACE,KAAK,CAAC,CAAC;IAClC,IAAI,CAACR,QAAQ,EAAE;MACbK,QAAQ,GAAG,KAAK;MAChB;IACF;IACAD,YAAY,CAACG,IAAI,CAAC;IAClB;IACA;IACAP,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,OAAQA,QAAoB,IAAK;IAC/BM,SAAS,CAACG,IAAI,CAACT,QAAQ,CAAC;IACxB,IAAI,CAACK,QAAQ,EAAE;MACbA,QAAQ,GAAG,IAAI;MACfD,YAAY,CAACG,IAAI,CAAC;IACpB;EACF,CAAC;AACH","ignoreList":[]}