{"version":3,"file":"profiler.js","names":["fs","_interopRequireWildcard","require","path","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","profileDir","process","env","PWTEST_PROFILE_DIR","session","startProfiling","Session","connect","Promise","f","post","stopProfiling","profileName","err","profile","mkdirSync","recursive","writeFileSync","join","JSON","stringify"],"sources":["../../src/utils/profiler.ts"],"sourcesContent":["/**\n * Copyright Microsoft Corporation. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nconst profileDir = process.env.PWTEST_PROFILE_DIR || '';\n\nlet session: import('inspector').Session;\n\nexport async function startProfiling() {\n  if (!profileDir)\n    return;\n\n  session = new (require('inspector').Session)();\n  session.connect();\n  await new Promise<void>(f => {\n    session.post('Profiler.enable', () => {\n      session.post('Profiler.start', f);\n    });\n  });\n}\n\nexport async function stopProfiling(profileName: string) {\n  if (!profileDir)\n    return;\n\n  await new Promise<void>(f => session.post('Profiler.stop', (err, { profile }) => {\n    if (!err) {\n      fs.mkdirSync(profileDir, { recursive: true });\n      fs.writeFileSync(path.join(profileDir, profileName + '.json'), JSON.stringify(profile));\n    }\n    f();\n  }));\n}\n"],"mappings":";;;;;;;AAgBA,IAAAA,EAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,IAAA,GAAAF,uBAAA,CAAAC,OAAA;AAA6B,SAAAE,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAJ,wBAAAI,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAjB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMW,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,EAAE;AAEvD,IAAIC,OAAoC;AAEjC,eAAeC,cAAcA,CAAA,EAAG;EACrC,IAAI,CAACL,UAAU,EACb;EAEFI,OAAO,GAAG,KAAK1B,OAAO,CAAC,WAAW,CAAC,CAAC4B,OAAO,EAAE,CAAC;EAC9CF,OAAO,CAACG,OAAO,CAAC,CAAC;EACjB,MAAM,IAAIC,OAAO,CAAOC,CAAC,IAAI;IAC3BL,OAAO,CAACM,IAAI,CAAC,iBAAiB,EAAE,MAAM;MACpCN,OAAO,CAACM,IAAI,CAAC,gBAAgB,EAAED,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEO,eAAeE,aAAaA,CAACC,WAAmB,EAAE;EACvD,IAAI,CAACZ,UAAU,EACb;EAEF,MAAM,IAAIQ,OAAO,CAAOC,CAAC,IAAIL,OAAO,CAACM,IAAI,CAAC,eAAe,EAAE,CAACG,GAAG,EAAE;IAAEC;EAAQ,CAAC,KAAK;IAC/E,IAAI,CAACD,GAAG,EAAE;MACRrC,EAAE,CAACuC,SAAS,CAACf,UAAU,EAAE;QAAEgB,SAAS,EAAE;MAAK,CAAC,CAAC;MAC7CxC,EAAE,CAACyC,aAAa,CAACtC,IAAI,CAACuC,IAAI,CAAClB,UAAU,EAAEY,WAAW,GAAG,OAAO,CAAC,EAAEO,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IACzF;IACAL,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL","ignoreList":[]}