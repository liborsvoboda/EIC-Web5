{"version":3,"file":"glob.js","names":["escapedChars","Set","globToRegex","glob","tokens","inGroup","i","length","c","char","push","has","beforeDeep","starCount","afterDeep","isDeep","undefined","RegExp","join"],"sources":["../../src/utils/glob.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions#escaping\nconst escapedChars = new Set(['$', '^', '+', '.', '*', '(', ')', '|', '\\\\', '?', '{', '}', '[', ']']);\n\nexport function globToRegex(glob: string): RegExp {\n  const tokens = ['^'];\n  let inGroup = false;\n  for (let i = 0; i < glob.length; ++i) {\n    const c = glob[i];\n    if (c === '\\\\' && i + 1 < glob.length) {\n      const char = glob[++i];\n      tokens.push(escapedChars.has(char) ? '\\\\' + char : char);\n      continue;\n    }\n    if (c === '*') {\n      const beforeDeep = glob[i - 1];\n      let starCount = 1;\n      while (glob[i + 1] === '*') {\n        starCount++;\n        i++;\n      }\n      const afterDeep = glob[i + 1];\n      const isDeep = starCount > 1 &&\n          (beforeDeep === '/' || beforeDeep === undefined) &&\n          (afterDeep === '/' || afterDeep === undefined);\n      if (isDeep) {\n        tokens.push('((?:[^/]*(?:\\/|$))*)');\n        i++;\n      } else {\n        tokens.push('([^/]*)');\n      }\n      continue;\n    }\n\n    switch (c) {\n      case '?':\n        tokens.push('.');\n        break;\n      case '[':\n        tokens.push('[');\n        break;\n      case ']':\n        tokens.push(']');\n        break;\n      case '{':\n        inGroup = true;\n        tokens.push('(');\n        break;\n      case '}':\n        inGroup = false;\n        tokens.push(')');\n        break;\n      case ',':\n        if (inGroup) {\n          tokens.push('|');\n          break;\n        }\n        tokens.push('\\\\' + c);\n        break;\n      default:\n        tokens.push(escapedChars.has(c) ? '\\\\' + c : c);\n    }\n  }\n  tokens.push('$');\n  return new RegExp(tokens.join(''));\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAE9F,SAASC,WAAWA,CAACC,IAAY,EAAU;EAChD,MAAMC,MAAM,GAAG,CAAC,GAAG,CAAC;EACpB,IAAIC,OAAO,GAAG,KAAK;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;IACpC,MAAME,CAAC,GAAGL,IAAI,CAACG,CAAC,CAAC;IACjB,IAAIE,CAAC,KAAK,IAAI,IAAIF,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE;MACrC,MAAME,IAAI,GAAGN,IAAI,CAAC,EAAEG,CAAC,CAAC;MACtBF,MAAM,CAACM,IAAI,CAACV,YAAY,CAACW,GAAG,CAACF,IAAI,CAAC,GAAG,IAAI,GAAGA,IAAI,GAAGA,IAAI,CAAC;MACxD;IACF;IACA,IAAID,CAAC,KAAK,GAAG,EAAE;MACb,MAAMI,UAAU,GAAGT,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC;MAC9B,IAAIO,SAAS,GAAG,CAAC;MACjB,OAAOV,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1BO,SAAS,EAAE;QACXP,CAAC,EAAE;MACL;MACA,MAAMQ,SAAS,GAAGX,IAAI,CAACG,CAAC,GAAG,CAAC,CAAC;MAC7B,MAAMS,MAAM,GAAGF,SAAS,GAAG,CAAC,KACvBD,UAAU,KAAK,GAAG,IAAIA,UAAU,KAAKI,SAAS,CAAC,KAC/CF,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAKE,SAAS,CAAC;MAClD,IAAID,MAAM,EAAE;QACVX,MAAM,CAACM,IAAI,CAAC,sBAAsB,CAAC;QACnCJ,CAAC,EAAE;MACL,CAAC,MAAM;QACLF,MAAM,CAACM,IAAI,CAAC,SAAS,CAAC;MACxB;MACA;IACF;IAEA,QAAQF,CAAC;MACP,KAAK,GAAG;QACNJ,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QAChB;MACF,KAAK,GAAG;QACNN,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QAChB;MACF,KAAK,GAAG;QACNN,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QAChB;MACF,KAAK,GAAG;QACNL,OAAO,GAAG,IAAI;QACdD,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QAChB;MACF,KAAK,GAAG;QACNL,OAAO,GAAG,KAAK;QACfD,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QAChB;MACF,KAAK,GAAG;QACN,IAAIL,OAAO,EAAE;UACXD,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;UAChB;QACF;QACAN,MAAM,CAACM,IAAI,CAAC,IAAI,GAAGF,CAAC,CAAC;QACrB;MACF;QACEJ,MAAM,CAACM,IAAI,CAACV,YAAY,CAACW,GAAG,CAACH,CAAC,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAGA,CAAC,CAAC;IACnD;EACF;EACAJ,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;EAChB,OAAO,IAAIO,MAAM,CAACb,MAAM,CAACc,IAAI,CAAC,EAAE,CAAC,CAAC;AACpC","ignoreList":[]}