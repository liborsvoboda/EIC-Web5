{"version":3,"file":"network.js","names":["_http","_interopRequireDefault","require","_https","_utilsBundle","_url","_rtti","_glob","_happyEyeballs","e","__esModule","default","NET_DEFAULT_TIMEOUT","exports","httpRequest","params","onResponse","onError","_params$timeout","parsedUrl","url","parse","options","agent","protocol","httpsHappyEyeballsAgent","httpHappyEyeballsAgent","method","headers","rejectUnauthorized","undefined","timeout","proxyURL","getProxyForUrl","parsedProxyURL","startsWith","path","href","host","hostname","port","secureProxy","HttpsProxyAgent","requestCallback","res","statusCode","location","URL","toString","request","https","http","on","rejectOnTimeout","Error","abort","setTimeout","end","data","fetchData","Promise","resolve","reject","response","error","body","chunk","urlMatchesEqual","match1","match2","isRegExp","source","flags","urlMatches","baseURL","urlString","match","isString","constructURLBasedOnBaseURL","globToRegex","test","parsedURL","pathname","givenURL","createHttpServer","args","server","createServer","decorateServer","createHttpsServer","isURLAvailable","ignoreHTTPSErrors","onLog","onStdErr","httpStatusCode","indexUrl","Accept","_res$statusCode","resume","code","message","sockets","Set","socket","add","once","delete","close","callback","destroy","clear","call"],"sources":["../../src/utils/network.ts"],"sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport http from 'http';\nimport https from 'https';\nimport type net from 'net';\nimport { getProxyForUrl } from '../utilsBundle';\nimport { HttpsProxyAgent } from '../utilsBundle';\nimport url from 'url';\nimport type { URLMatch } from '../common/types';\nimport { isString, isRegExp } from './rtti';\nimport { globToRegex } from './glob';\nimport { httpHappyEyeballsAgent, httpsHappyEyeballsAgent } from './happy-eyeballs';\n\nexport type HTTPRequestParams = {\n  url: string,\n  method?: string,\n  headers?: http.OutgoingHttpHeaders,\n  data?: string | Buffer,\n  timeout?: number,\n  rejectUnauthorized?: boolean,\n};\n\nexport const NET_DEFAULT_TIMEOUT = 30_000;\n\nexport function httpRequest(params: HTTPRequestParams, onResponse: (r: http.IncomingMessage) => void, onError: (error: Error) => void) {\n  const parsedUrl = url.parse(params.url);\n  let options: https.RequestOptions = {\n    ...parsedUrl,\n    agent: parsedUrl.protocol === 'https:' ? httpsHappyEyeballsAgent : httpHappyEyeballsAgent,\n    method: params.method || 'GET',\n    headers: params.headers,\n  };\n  if (params.rejectUnauthorized !== undefined)\n    options.rejectUnauthorized = params.rejectUnauthorized;\n\n  const timeout = params.timeout ?? NET_DEFAULT_TIMEOUT;\n\n  const proxyURL = getProxyForUrl(params.url);\n  if (proxyURL) {\n    const parsedProxyURL = url.parse(proxyURL);\n    if (params.url.startsWith('http:')) {\n      options = {\n        path: parsedUrl.href,\n        host: parsedProxyURL.hostname,\n        port: parsedProxyURL.port,\n        headers: options.headers,\n        method: options.method\n      };\n    } else {\n      (parsedProxyURL as any).secureProxy = parsedProxyURL.protocol === 'https:';\n\n      options.agent = new HttpsProxyAgent(parsedProxyURL);\n      options.rejectUnauthorized = false;\n    }\n  }\n\n  const requestCallback = (res: http.IncomingMessage) => {\n    const statusCode = res.statusCode || 0;\n    if (statusCode >= 300 && statusCode < 400 && res.headers.location)\n      httpRequest({ ...params, url: new URL(res.headers.location, params.url).toString() }, onResponse, onError);\n    else\n      onResponse(res);\n  };\n  const request = options.protocol === 'https:' ?\n    https.request(options, requestCallback) :\n    http.request(options, requestCallback);\n  request.on('error', onError);\n  if (timeout !== undefined) {\n    const rejectOnTimeout = () =>  {\n      onError(new Error(`Request to ${params.url} timed out after ${timeout}ms`));\n      request.abort();\n    };\n    if (timeout <= 0) {\n      rejectOnTimeout();\n      return;\n    }\n    request.setTimeout(timeout, rejectOnTimeout);\n  }\n  request.end(params.data);\n}\n\nexport function fetchData(params: HTTPRequestParams, onError?: (params: HTTPRequestParams, response: http.IncomingMessage) => Promise<Error>): Promise<string> {\n  return new Promise((resolve, reject) => {\n    httpRequest(params, async response => {\n      if (response.statusCode !== 200) {\n        const error = onError ? await onError(params, response) : new Error(`fetch failed: server returned code ${response.statusCode}. URL: ${params.url}`);\n        reject(error);\n        return;\n      }\n      let body = '';\n      response.on('data', (chunk: string) => body += chunk);\n      response.on('error', (error: any) => reject(error));\n      response.on('end', () => resolve(body));\n    }, reject);\n  });\n}\n\nexport function urlMatchesEqual(match1: URLMatch, match2: URLMatch) {\n  if (isRegExp(match1) && isRegExp(match2))\n    return match1.source === match2.source && match1.flags === match2.flags;\n  return match1 === match2;\n}\n\nexport function urlMatches(baseURL: string | undefined, urlString: string, match: URLMatch | undefined): boolean {\n  if (match === undefined || match === '')\n    return true;\n  if (isString(match) && !match.startsWith('*'))\n    match = constructURLBasedOnBaseURL(baseURL, match);\n  if (isString(match))\n    match = globToRegex(match);\n  if (isRegExp(match))\n    return match.test(urlString);\n  if (typeof match === 'string' && match === urlString)\n    return true;\n  const url = parsedURL(urlString);\n  if (!url)\n    return false;\n  if (typeof match === 'string')\n    return url.pathname === match;\n  if (typeof match !== 'function')\n    throw new Error('url parameter should be string, RegExp or function');\n  return match(url);\n}\n\nfunction parsedURL(url: string): URL | null {\n  try {\n    return new URL(url);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function constructURLBasedOnBaseURL(baseURL: string | undefined, givenURL: string): string {\n  try {\n    return (new URL(givenURL, baseURL)).toString();\n  } catch (e) {\n    return givenURL;\n  }\n}\n\nexport function createHttpServer(requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): http.Server;\nexport function createHttpServer(options: http.ServerOptions, requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): http.Server;\nexport function createHttpServer(...args: any[]): http.Server {\n  const server = http.createServer(...args);\n  decorateServer(server);\n  return server;\n}\n\nexport function createHttpsServer(requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): https.Server;\nexport function createHttpsServer(options: https.ServerOptions, requestListener?: (req: http.IncomingMessage, res: http.ServerResponse) => void): https.Server;\nexport function createHttpsServer(...args: any[]): https.Server {\n  const server = https.createServer(...args);\n  decorateServer(server);\n  return server;\n}\n\nexport async function isURLAvailable(url: URL, ignoreHTTPSErrors: boolean, onLog?: (data: string) => void, onStdErr?: (data: string) => void) {\n  let statusCode = await httpStatusCode(url, ignoreHTTPSErrors, onLog, onStdErr);\n  if (statusCode === 404 && url.pathname === '/') {\n    const indexUrl = new URL(url);\n    indexUrl.pathname = '/index.html';\n    statusCode = await httpStatusCode(indexUrl, ignoreHTTPSErrors, onLog, onStdErr);\n  }\n  return statusCode >= 200 && statusCode < 404;\n}\n\nasync function httpStatusCode(url: URL, ignoreHTTPSErrors: boolean, onLog?: (data: string) => void, onStdErr?: (data: string) => void): Promise<number> {\n  return new Promise(resolve => {\n    onLog?.(`HTTP GET: ${url}`);\n    httpRequest({\n      url: url.toString(),\n      headers: { Accept: '*/*' },\n      rejectUnauthorized: !ignoreHTTPSErrors\n    }, res => {\n      res.resume();\n      const statusCode = res.statusCode ?? 0;\n      onLog?.(`HTTP Status: ${statusCode}`);\n      resolve(statusCode);\n    }, error => {\n      if ((error as NodeJS.ErrnoException).code === 'DEPTH_ZERO_SELF_SIGNED_CERT')\n        onStdErr?.(`[WebServer] Self-signed certificate detected. Try adding ignoreHTTPSErrors: true to config.webServer.`);\n      onLog?.(`Error while checking if ${url} is available: ${error.message}`);\n      resolve(0);\n    });\n  });\n}\n\nfunction decorateServer(server: http.Server | http.Server) {\n  const sockets = new Set<net.Socket>();\n  server.on('connection', socket => {\n    sockets.add(socket);\n    socket.once('close', () => sockets.delete(socket));\n  });\n\n  const close = server.close;\n  server.close = (callback?: (err?: Error) => void) => {\n    for (const socket of sockets)\n      socket.destroy();\n    sockets.clear();\n    return close.call(server, callback);\n  };\n}\n"],"mappings":"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","ignoreList":[]}